{"ast":null,"code":"import { Task } from 'src/app/model/task';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/service/crud.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction DashboardComponent_li_44_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"li\", 20)(1, \"strong\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"p\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"p\");\n    i0.ɵɵtext(6);\n    i0.ɵɵpipe(7, \"date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"button\", 21);\n    i0.ɵɵlistener(\"click\", function DashboardComponent_li_44_Template_button_click_8_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const task_r2 = restoredCtx.$implicit;\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.deleteTask(task_r2));\n    });\n    i0.ɵɵtext(9, \"Delete\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"button\", 22);\n    i0.ɵɵlistener(\"click\", function DashboardComponent_li_44_Template_button_click_10_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const task_r2 = restoredCtx.$implicit;\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.call(task_r2));\n    });\n    i0.ɵɵtext(11, \"Edit\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"button\", 23);\n    i0.ɵɵlistener(\"click\", function DashboardComponent_li_44_Template_button_click_12_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const task_r2 = restoredCtx.$implicit;\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.completeTask(task_r2));\n    });\n    i0.ɵɵtext(13, \"Complete\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const task_r2 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(task_r2.title);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Description: \", task_r2.description, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Due Date: \", i0.ɵɵpipeBind2(7, 3, task_r2.dueDate, \"mediumDate\"), \"\");\n  }\n}\nfunction DashboardComponent_li_49_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"li\", 20)(1, \"strong\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"p\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"p\");\n    i0.ɵɵtext(6);\n    i0.ɵɵpipe(7, \"date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"button\", 21);\n    i0.ɵɵlistener(\"click\", function DashboardComponent_li_49_Template_button_click_8_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r9);\n      const task_r7 = restoredCtx.$implicit;\n      const ctx_r8 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r8.deleteTask(task_r7));\n    });\n    i0.ɵɵtext(9, \"Delete\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"button\", 22);\n    i0.ɵɵlistener(\"click\", function DashboardComponent_li_49_Template_button_click_10_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r9);\n      const task_r7 = restoredCtx.$implicit;\n      const ctx_r10 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r10.call(task_r7));\n    });\n    i0.ɵɵtext(11, \"Edit\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"button\", 24);\n    i0.ɵɵlistener(\"click\", function DashboardComponent_li_49_Template_button_click_12_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r9);\n      const task_r7 = restoredCtx.$implicit;\n      const ctx_r11 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r11.incompleteTask(task_r7));\n    });\n    i0.ɵɵtext(13, \"Incomplete\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const task_r7 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(task_r7.title);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Description: \", task_r7.description, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Due Date: \", i0.ɵɵpipeBind2(7, 3, task_r7.dueDate, \"mediumDate\"), \"\");\n  }\n}\nexport class DashboardComponent {\n  constructor(crudService) {\n    this.crudService = crudService;\n    this.taskObj = new Task();\n    this.completedTaskArr = [];\n    this.incompleteTaskArr = [];\n    this.addTaskValue = '';\n    this.addTaskDescription = '';\n    this.addDueDate = null;\n    this.editTaskValue = '';\n    this.editTaskDescription = '';\n    this.editDueDate = null;\n  }\n  ngOnInit() {\n    this.addTaskDescription = '';\n    this.editTaskDescription = '';\n    this.addDueDate = null;\n    this.editDueDate = null;\n    this.editTaskValue = '';\n    this.addTaskValue = '';\n    this.taskObj = new Task();\n    this.getCompletedTasks();\n    this.getIncompleteTasks();\n  }\n  addTask() {\n    this.taskObj.title = this.addTaskValue;\n    this.taskObj.description = this.addTaskDescription;\n    this.taskObj.dueDate = this.addDueDate;\n    this.crudService.addTask(this.taskObj).subscribe(res => {\n      this.ngOnInit();\n      this.addTaskValue = '';\n      this.addDueDate = null;\n      this.addTaskDescription = '';\n    }, err => {\n      alert(err);\n    });\n  }\n  editTask() {\n    this.taskObj.title = this.editTaskValue;\n    this.taskObj.description = this.editTaskDescription;\n    this.taskObj.dueDate = this.editDueDate;\n    this.crudService.editTask(this.taskObj).subscribe(res => {\n      this.ngOnInit();\n    }, err => {\n      alert(\"Failed to update task\");\n    });\n  }\n  deleteTask(etask) {\n    this.crudService.deleteTask(etask).subscribe(res => {\n      this.ngOnInit();\n    }, err => {\n      alert(\"Failed to delete task\");\n    });\n  }\n  call(etask) {\n    this.taskObj = etask;\n    this.editTaskValue = etask.title;\n  }\n  completeTask(etask) {\n    this.crudService.completeTask(etask).subscribe(res => {\n      this.ngOnInit();\n    }, err => {\n      alert(\"Failed to mark task as completed\");\n    });\n  }\n  incompleteTask(etask) {\n    this.crudService.incompleteTask(etask).subscribe(res => {\n      this.ngOnInit();\n    }, err => {\n      alert(\"Failed to mark task as incomplete\");\n    });\n  }\n  getCompletedTasks() {\n    this.crudService.getCompletedTasks().subscribe(res => {\n      this.completedTaskArr = res;\n    }, err => {\n      alert(\"Unable to get completed tasks\");\n    });\n  }\n  getIncompleteTasks() {\n    this.crudService.getIncompleteTasks().subscribe(res => {\n      this.incompleteTaskArr = res;\n    }, err => {\n      alert(\"Unable to get incomplete tasks\");\n    });\n  }\n  static #_ = this.ɵfac = function DashboardComponent_Factory(t) {\n    return new (t || DashboardComponent)(i0.ɵɵdirectiveInject(i1.CrudService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: DashboardComponent,\n    selectors: [[\"app-dashboard\"]],\n    decls: 50,\n    vars: 8,\n    consts: [[1, \"container\"], [1, \"row\", \"mt-3\"], [1, \"col-md-6\"], [1, \"mb-3\"], [\"for\", \"addTask\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"addTask\", \"name\", \"addTask\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"addTaskDescription\", 1, \"form-label\"], [\"id\", \"addTaskDescription\", \"name\", \"addTaskDescription\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"addDueDate\", 1, \"form-label\"], [\"type\", \"date\", \"id\", \"addDueDate\", \"name\", \"addDueDate\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"button\", 1, \"btn\", \"btn-primary\", 3, \"click\"], [\"for\", \"editTask\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"editTask\", \"name\", \"editTask\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"editTaskDescription\", 1, \"form-label\"], [\"id\", \"editTaskDescription\", \"name\", \"editTaskDescription\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"editDueDate\", 1, \"form-label\"], [\"type\", \"date\", \"id\", \"editDueDate\", \"name\", \"editDueDate\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"button\", 1, \"btn\", \"btn-success\", 3, \"click\"], [1, \"list-group\"], [\"class\", \"list-group-item\", 4, \"ngFor\", \"ngForOf\"], [1, \"list-group-item\"], [\"type\", \"button\", 1, \"btn\", \"btn-danger\", \"btn-sm\", 3, \"click\"], [\"type\", \"button\", 1, \"btn\", \"btn-warning\", \"btn-sm\", 3, \"click\"], [\"type\", \"button\", 1, \"btn\", \"btn-success\", \"btn-sm\", 3, \"click\"], [\"type\", \"button\", 1, \"btn\", \"btn-secondary\", \"btn-sm\", 3, \"click\"]],\n    template: function DashboardComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"h2\");\n        i0.ɵɵtext(4, \"Add Task\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"form\")(6, \"div\", 3)(7, \"label\", 4);\n        i0.ɵɵtext(8, \"Task Title\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"input\", 5);\n        i0.ɵɵlistener(\"ngModelChange\", function DashboardComponent_Template_input_ngModelChange_9_listener($event) {\n          return ctx.addTaskValue = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(10, \"div\", 3)(11, \"label\", 6);\n        i0.ɵɵtext(12, \"Task Description\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"textarea\", 7);\n        i0.ɵɵlistener(\"ngModelChange\", function DashboardComponent_Template_textarea_ngModelChange_13_listener($event) {\n          return ctx.addTaskDescription = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(14, \"div\", 3)(15, \"label\", 8);\n        i0.ɵɵtext(16, \"Due Date\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"input\", 9);\n        i0.ɵɵlistener(\"ngModelChange\", function DashboardComponent_Template_input_ngModelChange_17_listener($event) {\n          return ctx.addDueDate = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(18, \"button\", 10);\n        i0.ɵɵlistener(\"click\", function DashboardComponent_Template_button_click_18_listener() {\n          return ctx.addTask();\n        });\n        i0.ɵɵtext(19, \"Add Task\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(20, \"div\", 2)(21, \"h2\");\n        i0.ɵɵtext(22, \"Edit Task\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(23, \"form\")(24, \"div\", 3)(25, \"label\", 11);\n        i0.ɵɵtext(26, \"Task Title\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(27, \"input\", 12);\n        i0.ɵɵlistener(\"ngModelChange\", function DashboardComponent_Template_input_ngModelChange_27_listener($event) {\n          return ctx.editTaskValue = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(28, \"div\", 3)(29, \"label\", 13);\n        i0.ɵɵtext(30, \"Task Description\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(31, \"textarea\", 14);\n        i0.ɵɵlistener(\"ngModelChange\", function DashboardComponent_Template_textarea_ngModelChange_31_listener($event) {\n          return ctx.editTaskDescription = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(32, \"div\", 3)(33, \"label\", 15);\n        i0.ɵɵtext(34, \"Due Date\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(35, \"input\", 16);\n        i0.ɵɵlistener(\"ngModelChange\", function DashboardComponent_Template_input_ngModelChange_35_listener($event) {\n          return ctx.editDueDate = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(36, \"button\", 17);\n        i0.ɵɵlistener(\"click\", function DashboardComponent_Template_button_click_36_listener() {\n          return ctx.editTask();\n        });\n        i0.ɵɵtext(37, \"Update Task\");\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelement(38, \"hr\");\n        i0.ɵɵelementStart(39, \"div\", 1)(40, \"div\", 2)(41, \"h2\");\n        i0.ɵɵtext(42, \"Incomplete Tasks\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(43, \"ul\", 18);\n        i0.ɵɵtemplate(44, DashboardComponent_li_44_Template, 14, 6, \"li\", 19);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(45, \"div\", 2)(46, \"h2\");\n        i0.ɵɵtext(47, \"Completed Tasks\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(48, \"ul\", 18);\n        i0.ɵɵtemplate(49, DashboardComponent_li_49_Template, 14, 6, \"li\", 19);\n        i0.ɵɵelementEnd()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"ngModel\", ctx.addTaskValue);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.addTaskDescription);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.addDueDate);\n        i0.ɵɵadvance(10);\n        i0.ɵɵproperty(\"ngModel\", ctx.editTaskValue);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.editTaskDescription);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.editDueDate);\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"ngForOf\", ctx.incompleteTaskArr);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngForOf\", ctx.completedTaskArr);\n      }\n    },\n    dependencies: [i2.NgForOf, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.NgModel, i3.NgForm, i2.DatePipe],\n    styles: [\"/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJkYXNoYm9hcmQuY29tcG9uZW50LmNzcyJ9 */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50L2Rhc2hib2FyZC9kYXNoYm9hcmQuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQ0Esb0tBQW9LIiwic291cmNlUm9vdCI6IiJ9 */\"]\n  });\n}","map":{"version":3,"names":["Task","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","DashboardComponent_li_44_Template_button_click_8_listener","restoredCtx","ɵɵrestoreView","_r4","task_r2","$implicit","ctx_r3","ɵɵnextContext","ɵɵresetView","deleteTask","DashboardComponent_li_44_Template_button_click_10_listener","ctx_r5","call","DashboardComponent_li_44_Template_button_click_12_listener","ctx_r6","completeTask","ɵɵadvance","ɵɵtextInterpolate","title","ɵɵtextInterpolate1","description","ɵɵpipeBind2","dueDate","DashboardComponent_li_49_Template_button_click_8_listener","_r9","task_r7","ctx_r8","DashboardComponent_li_49_Template_button_click_10_listener","ctx_r10","DashboardComponent_li_49_Template_button_click_12_listener","ctx_r11","incompleteTask","DashboardComponent","constructor","crudService","taskObj","completedTaskArr","incompleteTaskArr","addTaskValue","addTaskDescription","addDueDate","editTaskValue","editTaskDescription","editDueDate","ngOnInit","getCompletedTasks","getIncompleteTasks","addTask","subscribe","res","err","alert","editTask","etask","_","ɵɵdirectiveInject","i1","CrudService","_2","selectors","decls","vars","consts","template","DashboardComponent_Template","rf","ctx","DashboardComponent_Template_input_ngModelChange_9_listener","$event","DashboardComponent_Template_textarea_ngModelChange_13_listener","DashboardComponent_Template_input_ngModelChange_17_listener","DashboardComponent_Template_button_click_18_listener","DashboardComponent_Template_input_ngModelChange_27_listener","DashboardComponent_Template_textarea_ngModelChange_31_listener","DashboardComponent_Template_input_ngModelChange_35_listener","DashboardComponent_Template_button_click_36_listener","ɵɵelement","ɵɵtemplate","DashboardComponent_li_44_Template","DashboardComponent_li_49_Template","ɵɵproperty"],"sources":["C:\\Users\\sgaut\\Documents\\tolist\\to-dolist\\src\\app\\component\\dashboard\\dashboard.component.ts","C:\\Users\\sgaut\\Documents\\tolist\\to-dolist\\src\\app\\component\\dashboard\\dashboard.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { Task } from 'src/app/model/task';\nimport { CrudService } from 'src/app/service/crud.service';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent {\n\n  taskObj: Task = new Task();\n  completedTaskArr: Task[] = [];\n  incompleteTaskArr: Task[] = [];\n\n  addTaskValue: string = '';\n  addTaskDescription: string = '';\n  addDueDate: Date | null = null;\n  editTaskValue: string = '';\n  editTaskDescription: string = '';\n  editDueDate: Date | null = null;\n\n  constructor(private crudService: CrudService) { }\n\n  ngOnInit(): void {\n    this.addTaskDescription = '';\n    this.editTaskDescription = '';\n    this.addDueDate = null;\n    this.editDueDate = null;\n    this.editTaskValue = '';\n    this.addTaskValue = '';\n    this.taskObj = new Task();\n    this.getCompletedTasks();\n    this.getIncompleteTasks();\n  }\n\n  addTask() {\n    this.taskObj.title = this.addTaskValue;\n    this.taskObj.description = this.addTaskDescription;\n    this.taskObj.dueDate = this.addDueDate;\n    this.crudService.addTask(this.taskObj).subscribe(res => {\n      this.ngOnInit();\n      this.addTaskValue = '';\n      this.addDueDate = null;\n      this.addTaskDescription = '';\n    }, err => {\n      alert(err);\n    })\n  }\n\n  editTask() {\n    this.taskObj.title = this.editTaskValue;\n    this.taskObj.description = this.editTaskDescription;\n    this.taskObj.dueDate = this.editDueDate;\n    this.crudService.editTask(this.taskObj).subscribe(res => {\n      this.ngOnInit();\n    }, err => {\n      alert(\"Failed to update task\");\n    })\n  }\n\n  deleteTask(etask: Task) {\n    this.crudService.deleteTask(etask).subscribe(res => {\n      this.ngOnInit();\n    }, err => {\n      alert(\"Failed to delete task\")\n    })\n  }\n\n  call(etask: Task) {\n    this.taskObj = etask;\n    this.editTaskValue = etask.title;\n  }\n\n  completeTask(etask: Task) {\n    this.crudService.completeTask(etask).subscribe(res => {\n      this.ngOnInit();\n    }, err => {\n      alert(\"Failed to mark task as completed\");\n    });\n  }\n\n  incompleteTask(etask: Task) {\n    this.crudService.incompleteTask(etask).subscribe(res => {\n      this.ngOnInit();\n    }, err => {\n      alert(\"Failed to mark task as incomplete\");\n    });\n  }\n\n  getCompletedTasks() {\n    this.crudService.getCompletedTasks().subscribe(res => {\n      this.completedTaskArr = res;\n    }, err => {\n      alert(\"Unable to get completed tasks\");\n    });\n  }\n\n  getIncompleteTasks() {\n    this.crudService.getIncompleteTasks().subscribe(res => {\n      this.incompleteTaskArr = res;\n    }, err => {\n      alert(\"Unable to get incomplete tasks\");\n    });\n  }\n}\n","<div class=\"container\">\n    <div class=\"row mt-3\">\n      <div class=\"col-md-6\">\n        <h2>Add Task</h2>\n        <form>\n          <div class=\"mb-3\">\n            <label for=\"addTask\" class=\"form-label\">Task Title</label>\n            <input type=\"text\" class=\"form-control\" id=\"addTask\" [(ngModel)]=\"addTaskValue\" name=\"addTask\">\n          </div>\n          <div class=\"mb-3\">\n            <label for=\"addTaskDescription\" class=\"form-label\">Task Description</label>\n            <textarea class=\"form-control\" id=\"addTaskDescription\" [(ngModel)]=\"addTaskDescription\" name=\"addTaskDescription\"></textarea>\n          </div>\n          <div class=\"mb-3\">\n            <label for=\"addDueDate\" class=\"form-label\">Due Date</label>\n            <input type=\"date\" class=\"form-control\" id=\"addDueDate\" [(ngModel)]=\"addDueDate\" name=\"addDueDate\">\n          </div>\n          <button type=\"button\" class=\"btn btn-primary\" (click)=\"addTask()\">Add Task</button>\n        </form>\n      </div>\n      <div class=\"col-md-6\">\n        <h2>Edit Task</h2>\n        <form>\n          <div class=\"mb-3\">\n            <label for=\"editTask\" class=\"form-label\">Task Title</label>\n            <input type=\"text\" class=\"form-control\" id=\"editTask\" [(ngModel)]=\"editTaskValue\" name=\"editTask\">\n          </div>\n          <div class=\"mb-3\">\n            <label for=\"editTaskDescription\" class=\"form-label\">Task Description</label>\n            <textarea class=\"form-control\" id=\"editTaskDescription\" [(ngModel)]=\"editTaskDescription\" name=\"editTaskDescription\"></textarea>\n          </div>\n          <div class=\"mb-3\">\n            <label for=\"editDueDate\" class=\"form-label\">Due Date</label>\n            <input type=\"date\" class=\"form-control\" id=\"editDueDate\" [(ngModel)]=\"editDueDate\" name=\"editDueDate\">\n          </div>\n          <button type=\"button\" class=\"btn btn-success\" (click)=\"editTask()\">Update Task</button>\n        </form>\n      </div>\n    </div>\n    <hr>\n    <div class=\"row mt-3\">\n      <div class=\"col-md-6\">\n        <h2>Incomplete Tasks</h2>\n        <ul class=\"list-group\">\n          <li class=\"list-group-item\" *ngFor=\"let task of incompleteTaskArr\">\n            <strong>{{ task.title }}</strong>\n            <p>Description: {{ task.description }}</p>\n            <p>Due Date: {{ task.dueDate | date: 'mediumDate' }}</p>\n            <button type=\"button\" class=\"btn btn-danger btn-sm\" (click)=\"deleteTask(task)\">Delete</button>\n            <button type=\"button\" class=\"btn btn-warning btn-sm\" (click)=\"call(task)\">Edit</button>\n            <button type=\"button\" class=\"btn btn-success btn-sm\" (click)=\"completeTask(task)\">Complete</button>\n          </li>\n        </ul>\n      </div>\n      <div class=\"col-md-6\">\n        <h2>Completed Tasks</h2>\n        <ul class=\"list-group\">\n          <li class=\"list-group-item\" *ngFor=\"let task of completedTaskArr\">\n            <strong>{{ task.title }}</strong>\n            <p>Description: {{ task.description }}</p>\n            <p>Due Date: {{ task.dueDate | date: 'mediumDate' }}</p>\n            <button type=\"button\" class=\"btn btn-danger btn-sm\" (click)=\"deleteTask(task)\">Delete</button>\n            <button type=\"button\" class=\"btn btn-warning btn-sm\" (click)=\"call(task)\">Edit</button>\n            <button type=\"button\" class=\"btn btn-secondary btn-sm\" (click)=\"incompleteTask(task)\">Incomplete</button>\n          </li>\n        </ul>\n      </div>\n    </div>\n  </div>\n  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}