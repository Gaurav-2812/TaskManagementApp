{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class CrudService {\n  constructor(http) {\n    this.http = http;\n    this.baseUrl = 'http://your-backend-api-url/api/tasks';\n  }\n  addTask(task) {\n    return this.http.post(`${this.baseUrl}`, task);\n  }\n  getAllTask() {\n    return this.http.get(`${this.baseUrl}`);\n  }\n  deleteTask(task) {\n    return this.http.delete(this.serviceURL + '/' + task.id);\n  }\n  editTask(task) {\n    return this.http.put(`${this.baseUrl}/${task._id}`, task);\n  }\n  static #_ = this.ɵfac = function CrudService_Factory(t) {\n    return new (t || CrudService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: CrudService,\n    factory: CrudService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["CrudService","constructor","http","baseUrl","addTask","task","post","getAllTask","get","deleteTask","delete","serviceURL","id","editTask","put","_id","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\sgaut\\Documents\\tolist\\to-dolist\\src\\app\\service\\crud.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Task } from '../model/task';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CrudService {\n\n  private baseUrl = 'http://your-backend-api-url/api/tasks';\n\n  constructor(private http : HttpClient) {}\n\n  addTask(task: Task): Observable<Task> {\n    return this.http.post<Task>(`${this.baseUrl}`, task);\n  }\n  getAllTask() : Observable<Task[]> {\n    return this.http.get<Task[]>(`${this.baseUrl}`);\n  }\n  deleteTask(task: Task) : Observable<Task> {\n    return this.http.delete<Task>(this.serviceURL+'/'+task.id);\n  }\n  editTask(task: Task): Observable<Task> {\n    return this.http.put<Task>(`${this.baseUrl}/${task._id}`, task);\n  }\n}\n"],"mappings":";;AAQA,OAAM,MAAOA,WAAW;EAItBC,YAAoBC,IAAiB;IAAjB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,OAAO,GAAG,uCAAuC;EAEjB;EAExCC,OAAOA,CAACC,IAAU;IAChB,OAAO,IAAI,CAACH,IAAI,CAACI,IAAI,CAAO,GAAG,IAAI,CAACH,OAAO,EAAE,EAAEE,IAAI,CAAC;EACtD;EACAE,UAAUA,CAAA;IACR,OAAO,IAAI,CAACL,IAAI,CAACM,GAAG,CAAS,GAAG,IAAI,CAACL,OAAO,EAAE,CAAC;EACjD;EACAM,UAAUA,CAACJ,IAAU;IACnB,OAAO,IAAI,CAACH,IAAI,CAACQ,MAAM,CAAO,IAAI,CAACC,UAAU,GAAC,GAAG,GAACN,IAAI,CAACO,EAAE,CAAC;EAC5D;EACAC,QAAQA,CAACR,IAAU;IACjB,OAAO,IAAI,CAACH,IAAI,CAACY,GAAG,CAAO,GAAG,IAAI,CAACX,OAAO,IAAIE,IAAI,CAACU,GAAG,EAAE,EAAEV,IAAI,CAAC;EACjE;EAAC,QAAAW,CAAA,G;qBAjBUhB,WAAW,EAAAiB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAXrB,WAAW;IAAAsB,OAAA,EAAXtB,WAAW,CAAAuB,IAAA;IAAAC,UAAA,EAFV;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}