{"ast":null,"code":"import { Task } from 'src/app/model/task';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/service/crud.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction DashboardComponent_div_23_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 14)(1, \"div\", 15)(2, \"form\", 16);\n    i0.ɵɵlistener(\"ngSubmit\", function DashboardComponent_div_23_Template_form_ngSubmit_2_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.editTask());\n    });\n    i0.ɵɵelementStart(3, \"div\", 3)(4, \"label\", 17);\n    i0.ɵɵtext(5, \"Task Title\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"input\", 18);\n    i0.ɵɵlistener(\"ngModelChange\", function DashboardComponent_div_23_Template_input_ngModelChange_6_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.editTaskValue = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(7, \"div\", 3)(8, \"label\", 19);\n    i0.ɵɵtext(9, \"Task Description\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"textarea\", 20);\n    i0.ɵɵlistener(\"ngModelChange\", function DashboardComponent_div_23_Template_textarea_ngModelChange_10_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.editTaskDescription = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(11, \"div\", 3)(12, \"label\", 21);\n    i0.ɵɵtext(13, \"Due Date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"input\", 22);\n    i0.ɵɵlistener(\"ngModelChange\", function DashboardComponent_div_23_Template_input_ngModelChange_14_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.editDueDate = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(15, \"button\", 23);\n    i0.ɵɵlistener(\"click\", function DashboardComponent_div_23_Template_button_click_15_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r8 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r8.editTask());\n    });\n    i0.ɵɵtext(16, \"Update Task\");\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.editTaskValue);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.editTaskDescription);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.editDueDate);\n  }\n}\nfunction DashboardComponent_li_30_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r11 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"li\", 24)(1, \"strong\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"p\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"p\");\n    i0.ɵɵtext(6);\n    i0.ɵɵpipe(7, \"date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"button\", 25);\n    i0.ɵɵlistener(\"click\", function DashboardComponent_li_30_Template_button_click_8_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r11);\n      const task_r9 = restoredCtx.$implicit;\n      const ctx_r10 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r10.deleteTask(task_r9));\n    });\n    i0.ɵɵtext(9, \"Delete\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"button\", 26);\n    i0.ɵɵlistener(\"click\", function DashboardComponent_li_30_Template_button_click_10_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r11);\n      const task_r9 = restoredCtx.$implicit;\n      const ctx_r12 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r12.call(task_r9));\n    });\n    i0.ɵɵtext(11, \"Edit\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"button\", 27);\n    i0.ɵɵlistener(\"click\", function DashboardComponent_li_30_Template_button_click_12_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r11);\n      const task_r9 = restoredCtx.$implicit;\n      const ctx_r13 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r13.completeTask(task_r9));\n    });\n    i0.ɵɵtext(13, \"Complete\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const task_r9 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(task_r9.title);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Description: \", task_r9.description, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Due Date: \", i0.ɵɵpipeBind2(7, 3, task_r9.dueDate, \"mediumDate\"), \"\");\n  }\n}\nfunction DashboardComponent_li_35_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r16 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"li\", 24)(1, \"strong\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"p\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"p\");\n    i0.ɵɵtext(6);\n    i0.ɵɵpipe(7, \"date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"button\", 25);\n    i0.ɵɵlistener(\"click\", function DashboardComponent_li_35_Template_button_click_8_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r16);\n      const task_r14 = restoredCtx.$implicit;\n      const ctx_r15 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r15.deleteTask(task_r14));\n    });\n    i0.ɵɵtext(9, \"Delete\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"button\", 26);\n    i0.ɵɵlistener(\"click\", function DashboardComponent_li_35_Template_button_click_10_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r16);\n      const task_r14 = restoredCtx.$implicit;\n      const ctx_r17 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r17.call(task_r14));\n    });\n    i0.ɵɵtext(11, \"Edit\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"button\", 28);\n    i0.ɵɵlistener(\"click\", function DashboardComponent_li_35_Template_button_click_12_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r16);\n      const task_r14 = restoredCtx.$implicit;\n      const ctx_r18 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r18.incompleteTask(task_r14));\n    });\n    i0.ɵɵtext(13, \"Incomplete\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const task_r14 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(task_r14.title);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Description: \", task_r14.description, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Due Date: \", i0.ɵɵpipeBind2(7, 3, task_r14.dueDate, \"mediumDate\"), \"\");\n  }\n}\nexport class DashboardComponent {\n  constructor(crudService) {\n    this.crudService = crudService;\n    this.taskObj = new Task();\n    this.completedTaskArr = [];\n    this.incompleteTaskArr = [];\n    this.addTaskValue = '';\n    this.addTaskDescription = '';\n    this.addDueDate = null;\n    this.editTaskValue = '';\n    this.editTaskDescription = '';\n    this.editDueDate = null;\n  }\n  ngOnInit() {\n    this.addTaskDescription = '';\n    this.editTaskDescription = '';\n    this.addDueDate = null;\n    this.editDueDate = null;\n    this.editTaskValue = '';\n    this.addTaskValue = '';\n    this.taskObj = new Task();\n    this.getCompletedTasks();\n    this.getIncompleteTasks();\n  }\n  addTask() {\n    this.taskObj.title = this.addTaskValue;\n    this.taskObj.description = this.addTaskDescription;\n    this.taskObj.dueDate = this.addDueDate;\n    this.crudService.addTask(this.taskObj).subscribe(res => {\n      this.ngOnInit();\n      this.addTaskValue = '';\n      this.addDueDate = null;\n      this.addTaskDescription = '';\n    }, err => {\n      alert(err);\n    });\n  }\n  editTask() {\n    this.taskObj.title = this.editTaskValue;\n    this.taskObj.description = this.editTaskDescription;\n    this.taskObj.dueDate = this.editDueDate;\n    this.crudService.editTask(this.taskObj).subscribe(res => {\n      this.ngOnInit();\n    }, err => {\n      alert(\"Failed to update task\");\n    });\n  }\n  deleteTask(etask) {\n    this.crudService.deleteTask(etask).subscribe(res => {\n      this.ngOnInit();\n    }, err => {\n      alert(\"Failed to delete task\");\n    });\n  }\n  call(etask) {\n    this.taskObj = etask;\n    this.editTaskValue = etask.title;\n  }\n  completeTask(etask) {\n    this.crudService.completeTask(etask).subscribe(res => {\n      this.ngOnInit();\n    }, err => {\n      alert(\"Failed to mark task as completed\");\n    });\n  }\n  incompleteTask(etask) {\n    this.crudService.incompleteTask(etask).subscribe(res => {\n      this.ngOnInit();\n    }, err => {\n      alert(\"Failed to mark task as incomplete\");\n    });\n  }\n  getCompletedTasks() {\n    this.crudService.getCompletedTasks().subscribe(res => {\n      this.completedTaskArr = res;\n    }, err => {\n      alert(\"Unable to get completed tasks\");\n    });\n  }\n  getIncompleteTasks() {\n    this.crudService.getIncompleteTasks().subscribe(res => {\n      this.incompleteTaskArr = res;\n    }, err => {\n      alert(\"Unable to get incomplete tasks\");\n    });\n  }\n  static #_ = this.ɵfac = function DashboardComponent_Factory(t) {\n    return new (t || DashboardComponent)(i0.ɵɵdirectiveInject(i1.CrudService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: DashboardComponent,\n    selectors: [[\"app-dashboard\"]],\n    decls: 36,\n    vars: 6,\n    consts: [[1, \"container\"], [1, \"row\", \"mt-3\"], [1, \"col-md-6\"], [1, \"mb-3\"], [\"for\", \"addTask\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"addTask\", \"name\", \"addTask\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"addTaskDescription\", 1, \"form-label\"], [\"id\", \"addTaskDescription\", \"name\", \"addTaskDescription\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"addDueDate\", 1, \"form-label\"], [\"type\", \"date\", \"id\", \"addDueDate\", \"name\", \"addDueDate\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"button\", 1, \"btn\", \"btn-primary\", 3, \"click\"], [\"class\", \"modal\", 4, \"ngIf\"], [1, \"list-group\"], [\"class\", \"list-group-item\", 4, \"ngFor\", \"ngForOf\"], [1, \"modal\"], [1, \"modal-content\"], [3, \"ngSubmit\"], [\"for\", \"editTask\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"editTask\", \"name\", \"editTask\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"editTaskDescription\", 1, \"form-label\"], [\"id\", \"editTaskDescription\", \"name\", \"editTaskDescription\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"editDueDate\", 1, \"form-label\"], [\"type\", \"date\", \"id\", \"editDueDate\", \"name\", \"editDueDate\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"button\", 1, \"btn\", \"btn-success\", 3, \"click\"], [1, \"list-group-item\"], [\"type\", \"button\", 1, \"btn\", \"btn-danger\", \"btn-sm\", 3, \"click\"], [\"type\", \"button\", 1, \"btn\", \"btn-warning\", \"btn-sm\", 3, \"click\"], [\"type\", \"button\", 1, \"btn\", \"btn-success\", \"btn-sm\", 3, \"click\"], [\"type\", \"button\", 1, \"btn\", \"btn-secondary\", \"btn-sm\", 3, \"click\"]],\n    template: function DashboardComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"h2\");\n        i0.ɵɵtext(4, \"Add Task\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"form\")(6, \"div\", 3)(7, \"label\", 4);\n        i0.ɵɵtext(8, \"Task Title\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"input\", 5);\n        i0.ɵɵlistener(\"ngModelChange\", function DashboardComponent_Template_input_ngModelChange_9_listener($event) {\n          return ctx.addTaskValue = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(10, \"div\", 3)(11, \"label\", 6);\n        i0.ɵɵtext(12, \"Task Description\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"textarea\", 7);\n        i0.ɵɵlistener(\"ngModelChange\", function DashboardComponent_Template_textarea_ngModelChange_13_listener($event) {\n          return ctx.addTaskDescription = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(14, \"div\", 3)(15, \"label\", 8);\n        i0.ɵɵtext(16, \"Due Date\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"input\", 9);\n        i0.ɵɵlistener(\"ngModelChange\", function DashboardComponent_Template_input_ngModelChange_17_listener($event) {\n          return ctx.addDueDate = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(18, \"button\", 10);\n        i0.ɵɵlistener(\"click\", function DashboardComponent_Template_button_click_18_listener() {\n          return ctx.addTask();\n        });\n        i0.ɵɵtext(19, \"Add Task\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(20, \"div\", 2)(21, \"h2\");\n        i0.ɵɵtext(22, \"Edit Task\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(23, DashboardComponent_div_23_Template, 17, 3, \"div\", 11);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(24, \"hr\");\n        i0.ɵɵelementStart(25, \"div\", 1)(26, \"div\", 2)(27, \"h2\");\n        i0.ɵɵtext(28, \"Incomplete Tasks\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(29, \"ul\", 12);\n        i0.ɵɵtemplate(30, DashboardComponent_li_30_Template, 14, 6, \"li\", 13);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(31, \"div\", 2)(32, \"h2\");\n        i0.ɵɵtext(33, \"Completed Tasks\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(34, \"ul\", 12);\n        i0.ɵɵtemplate(35, DashboardComponent_li_35_Template, 14, 6, \"li\", 13);\n        i0.ɵɵelementEnd()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"ngModel\", ctx.addTaskValue);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.addTaskDescription);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.addDueDate);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngIf\", ctx.taskObj._id);\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngForOf\", ctx.incompleteTaskArr);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngForOf\", ctx.completedTaskArr);\n      }\n    },\n    dependencies: [i2.NgForOf, i2.NgIf, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.NgModel, i3.NgForm, i2.DatePipe],\n    styles: [\"/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJkYXNoYm9hcmQuY29tcG9uZW50LmNzcyJ9 */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50L2Rhc2hib2FyZC9kYXNoYm9hcmQuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQ0Esb0tBQW9LIiwic291cmNlUm9vdCI6IiJ9 */\"]\n  });\n}","map":{"version":3,"names":["Task","i0","ɵɵelementStart","ɵɵlistener","DashboardComponent_div_23_Template_form_ngSubmit_2_listener","ɵɵrestoreView","_r4","ctx_r3","ɵɵnextContext","ɵɵresetView","editTask","ɵɵtext","ɵɵelementEnd","DashboardComponent_div_23_Template_input_ngModelChange_6_listener","$event","ctx_r5","editTaskValue","DashboardComponent_div_23_Template_textarea_ngModelChange_10_listener","ctx_r6","editTaskDescription","DashboardComponent_div_23_Template_input_ngModelChange_14_listener","ctx_r7","editDueDate","DashboardComponent_div_23_Template_button_click_15_listener","ctx_r8","ɵɵadvance","ɵɵproperty","ctx_r0","DashboardComponent_li_30_Template_button_click_8_listener","restoredCtx","_r11","task_r9","$implicit","ctx_r10","deleteTask","DashboardComponent_li_30_Template_button_click_10_listener","ctx_r12","call","DashboardComponent_li_30_Template_button_click_12_listener","ctx_r13","completeTask","ɵɵtextInterpolate","title","ɵɵtextInterpolate1","description","ɵɵpipeBind2","dueDate","DashboardComponent_li_35_Template_button_click_8_listener","_r16","task_r14","ctx_r15","DashboardComponent_li_35_Template_button_click_10_listener","ctx_r17","DashboardComponent_li_35_Template_button_click_12_listener","ctx_r18","incompleteTask","DashboardComponent","constructor","crudService","taskObj","completedTaskArr","incompleteTaskArr","addTaskValue","addTaskDescription","addDueDate","ngOnInit","getCompletedTasks","getIncompleteTasks","addTask","subscribe","res","err","alert","etask","_","ɵɵdirectiveInject","i1","CrudService","_2","selectors","decls","vars","consts","template","DashboardComponent_Template","rf","ctx","DashboardComponent_Template_input_ngModelChange_9_listener","DashboardComponent_Template_textarea_ngModelChange_13_listener","DashboardComponent_Template_input_ngModelChange_17_listener","DashboardComponent_Template_button_click_18_listener","ɵɵtemplate","DashboardComponent_div_23_Template","ɵɵelement","DashboardComponent_li_30_Template","DashboardComponent_li_35_Template","_id"],"sources":["C:\\Users\\sgaut\\Documents\\tolist\\to-dolist\\src\\app\\component\\dashboard\\dashboard.component.ts","C:\\Users\\sgaut\\Documents\\tolist\\to-dolist\\src\\app\\component\\dashboard\\dashboard.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { Task } from 'src/app/model/task';\nimport { CrudService } from 'src/app/service/crud.service';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent {\n\n  taskObj: Task = new Task();\n  completedTaskArr: Task[] = [];\n  incompleteTaskArr: Task[] = [];\n\n  addTaskValue: string = '';\n  addTaskDescription: string = '';\n  addDueDate: Date | null = null;\n  editTaskValue: string = '';\n  editTaskDescription: string = '';\n  editDueDate: Date | null = null;\n\n  constructor(private crudService: CrudService) { }\n\n  ngOnInit(): void {\n    this.addTaskDescription = '';\n    this.editTaskDescription = '';\n    this.addDueDate = null;\n    this.editDueDate = null;\n    this.editTaskValue = '';\n    this.addTaskValue = '';\n    this.taskObj = new Task();\n    this.getCompletedTasks();\n    this.getIncompleteTasks();\n  }\n\n  addTask() {\n    this.taskObj.title = this.addTaskValue;\n    this.taskObj.description = this.addTaskDescription;\n    this.taskObj.dueDate = this.addDueDate;\n    this.crudService.addTask(this.taskObj).subscribe(res => {\n      this.ngOnInit();\n      this.addTaskValue = '';\n      this.addDueDate = null;\n      this.addTaskDescription = '';\n    }, err => {\n      alert(err);\n    })\n  }\n\n  editTask() {\n    this.taskObj.title = this.editTaskValue;\n    this.taskObj.description = this.editTaskDescription;\n    this.taskObj.dueDate = this.editDueDate;\n    this.crudService.editTask(this.taskObj).subscribe(res => {\n      this.ngOnInit();\n    }, err => {\n      alert(\"Failed to update task\");\n    })\n  }\n\n  deleteTask(etask: Task) {\n    this.crudService.deleteTask(etask).subscribe(res => {\n      this.ngOnInit();\n    }, err => {\n      alert(\"Failed to delete task\")\n    })\n  }\n\n  call(etask: Task) {\n    this.taskObj = etask;\n    this.editTaskValue = etask.title;\n  }\n\n  completeTask(etask: Task) {\n    this.crudService.completeTask(etask).subscribe(res => {\n      this.ngOnInit();\n    }, err => {\n      alert(\"Failed to mark task as completed\");\n    });\n  }\n\n  incompleteTask(etask: Task) {\n    this.crudService.incompleteTask(etask).subscribe(res => {\n      this.ngOnInit();\n    }, err => {\n      alert(\"Failed to mark task as incomplete\");\n    });\n  }\n\n  getCompletedTasks() {\n    this.crudService.getCompletedTasks().subscribe(res => {\n      this.completedTaskArr = res;\n    }, err => {\n      alert(\"Unable to get completed tasks\");\n    });\n  }\n\n  getIncompleteTasks() {\n    this.crudService.getIncompleteTasks().subscribe(res => {\n      this.incompleteTaskArr = res;\n    }, err => {\n      alert(\"Unable to get incomplete tasks\");\n    });\n  }\n}\n","<div class=\"container\">\n    <div class=\"row mt-3\">\n      <div class=\"col-md-6\">\n        <h2>Add Task</h2>\n        <form>\n          <div class=\"mb-3\">\n            <label for=\"addTask\" class=\"form-label\">Task Title</label>\n            <input type=\"text\" class=\"form-control\" id=\"addTask\" [(ngModel)]=\"addTaskValue\" name=\"addTask\">\n          </div>\n          <div class=\"mb-3\">\n            <label for=\"addTaskDescription\" class=\"form-label\">Task Description</label>\n            <textarea class=\"form-control\" id=\"addTaskDescription\" [(ngModel)]=\"addTaskDescription\" name=\"addTaskDescription\"></textarea>\n          </div>\n          <div class=\"mb-3\">\n            <label for=\"addDueDate\" class=\"form-label\">Due Date</label>\n            <input type=\"date\" class=\"form-control\" id=\"addDueDate\" [(ngModel)]=\"addDueDate\" name=\"addDueDate\">\n          </div>\n          <button type=\"button\" class=\"btn btn-primary\" (click)=\"addTask()\">Add Task</button>\n        </form>\n      </div>\n      <div class=\"col-md-6\">\n        <h2>Edit Task</h2>\n        <!-- Edit Task Section (as a modal) -->\n        <div *ngIf=\"taskObj._id\" class=\"modal\">\n          <div class=\"modal-content\">\n            <form (ngSubmit)=\"editTask()\">\n                <div class=\"mb-3\">\n                    <label for=\"editTask\" class=\"form-label\">Task Title</label>\n                    <input type=\"text\" class=\"form-control\" id=\"editTask\" [(ngModel)]=\"editTaskValue\" name=\"editTask\">\n                  </div>\n                  <div class=\"mb-3\">\n                    <label for=\"editTaskDescription\" class=\"form-label\">Task Description</label>\n                    <textarea class=\"form-control\" id=\"editTaskDescription\" [(ngModel)]=\"editTaskDescription\" name=\"editTaskDescription\"></textarea>\n                  </div>\n                  <div class=\"mb-3\">\n                    <label for=\"editDueDate\" class=\"form-label\">Due Date</label>\n                    <input type=\"date\" class=\"form-control\" id=\"editDueDate\" [(ngModel)]=\"editDueDate\" name=\"editDueDate\">\n                  </div>\n                  <button type=\"button\" class=\"btn btn-success\" (click)=\"editTask()\">Update Task</button>\n              <!-- <button type=\"button\" class=\"btn btn-danger\" (click)=\"cancelEdit()\">Cancel</button> -->\n              <!-- <button type=\"submit\" class=\"btn btn-success\">Update Task</button> -->\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n    <hr>\n    <div class=\"row mt-3\">\n      <div class=\"col-md-6\">\n        <h2>Incomplete Tasks</h2>\n        <ul class=\"list-group\">\n          <li class=\"list-group-item\" *ngFor=\"let task of incompleteTaskArr\">\n            <strong>{{ task.title }}</strong>\n            <p>Description: {{ task.description }}</p>\n            <p>Due Date: {{ task.dueDate | date: 'mediumDate' }}</p>\n            <button type=\"button\" class=\"btn btn-danger btn-sm\" (click)=\"deleteTask(task)\">Delete</button>\n            <button type=\"button\" class=\"btn btn-warning btn-sm\" (click)=\"call(task)\">Edit</button>\n            <button type=\"button\" class=\"btn btn-success btn-sm\" (click)=\"completeTask(task)\">Complete</button>\n          </li>\n        </ul>\n      </div>\n      <div class=\"col-md-6\">\n        <h2>Completed Tasks</h2>\n        <ul class=\"list-group\">\n          <li class=\"list-group-item\" *ngFor=\"let task of completedTaskArr\">\n            <strong>{{ task.title }}</strong>\n            <p>Description: {{ task.description }}</p>\n            <p>Due Date: {{ task.dueDate | date: 'mediumDate' }}</p>\n            <button type=\"button\" class=\"btn btn-danger btn-sm\" (click)=\"deleteTask(task)\">Delete</button>\n            <button type=\"button\" class=\"btn btn-warning btn-sm\" (click)=\"call(task)\">Edit</button>\n            <button type=\"button\" class=\"btn btn-secondary btn-sm\" (click)=\"incompleteTask(task)\">Incomplete</button>\n          </li>\n        </ul>\n      </div>\n    </div>\n  </div>\n  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}