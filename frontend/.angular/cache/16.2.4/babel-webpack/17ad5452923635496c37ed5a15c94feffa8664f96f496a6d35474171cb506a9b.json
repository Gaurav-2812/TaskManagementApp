{"ast":null,"code":"import { Task } from 'src/app/model/task';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/service/crud.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nconst _c0 = [\"taskInput\"];\nconst _c1 = [\"descriptionInput\"];\nconst _c2 = [\"dueDateInput\"];\nfunction DashboardComponent_div_29_div_4_ng_container_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelement(1, \"i\", 57);\n    i0.ɵɵelementContainerEnd();\n  }\n}\nfunction DashboardComponent_div_29_div_4_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 58)(1, \"p\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"p\");\n    i0.ɵɵtext(4);\n    i0.ɵɵpipe(5, \"date\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const task_r14 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Description: \", task_r14.description, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Due Date: \", i0.ɵɵpipeBind1(5, 2, task_r14.dueDate), \"\");\n  }\n}\nfunction DashboardComponent_div_29_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r19 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 45)(1, \"div\", 46)(2, \"div\", 47)(3, \"h5\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"button\", 48);\n    i0.ɵɵlistener(\"click\", function DashboardComponent_div_29_div_4_Template_button_click_5_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r19);\n      const task_r14 = restoredCtx.$implicit;\n      const ctx_r18 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r18.toggleTaskDetails(task_r14));\n    });\n    i0.ɵɵtemplate(6, DashboardComponent_div_29_div_4_ng_container_6_Template, 2, 0, \"ng-container\", 49);\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(8, DashboardComponent_div_29_div_4_div_8_Template, 6, 4, \"div\", 50);\n    i0.ɵɵelementStart(9, \"button\", 51);\n    i0.ɵɵlistener(\"click\", function DashboardComponent_div_29_div_4_Template_button_click_9_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r19);\n      const task_r14 = restoredCtx.$implicit;\n      const ctx_r20 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r20.call(task_r14));\n    });\n    i0.ɵɵelement(10, \"i\", 52);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"button\", 53);\n    i0.ɵɵlistener(\"click\", function DashboardComponent_div_29_div_4_Template_button_click_11_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r19);\n      const task_r14 = restoredCtx.$implicit;\n      const ctx_r21 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r21.deleteTask(task_r14));\n    });\n    i0.ɵɵelement(12, \"i\", 54);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"button\", 55);\n    i0.ɵɵlistener(\"click\", function DashboardComponent_div_29_div_4_Template_button_click_13_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r19);\n      const task_r14 = restoredCtx.$implicit;\n      const ctx_r22 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r22.completeTask(task_r14));\n    });\n    i0.ɵɵelement(14, \"i\", 56);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const task_r14 = ctx.$implicit;\n    const ctx_r13 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(task_r14.title);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r13.isSmallScreen)(\"ngIfElse\", ctx_r13.showDetailsButton);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", task_r14.showDetails ? \"Hide Details\" : \"Show Details\", \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", task_r14.showDetails);\n  }\n}\nfunction DashboardComponent_div_29_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"h4\", 42);\n    i0.ɵɵtext(2, \"Incomplete Tasks:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 43);\n    i0.ɵɵtemplate(4, DashboardComponent_div_29_div_4_Template, 15, 5, \"div\", 44);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r4.incompleteTaskArr);\n  }\n}\nfunction DashboardComponent_div_30_div_4_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 58)(1, \"p\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"p\");\n    i0.ɵɵtext(4);\n    i0.ɵɵpipe(5, \"date\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const task_r24 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Description: \", task_r24.description, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Due Date: \", i0.ɵɵpipeBind1(5, 2, task_r24.dueDate), \"\");\n  }\n}\nfunction DashboardComponent_div_30_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r28 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 45)(1, \"div\", 46)(2, \"div\", 47)(3, \"h5\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"button\", 48);\n    i0.ɵɵlistener(\"click\", function DashboardComponent_div_30_div_4_Template_button_click_5_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r28);\n      const task_r24 = restoredCtx.$implicit;\n      const ctx_r27 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r27.toggleTaskDetails(task_r24));\n    });\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(7, DashboardComponent_div_30_div_4_div_7_Template, 6, 4, \"div\", 50);\n    i0.ɵɵelementStart(8, \"button\", 51);\n    i0.ɵɵlistener(\"click\", function DashboardComponent_div_30_div_4_Template_button_click_8_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r28);\n      const task_r24 = restoredCtx.$implicit;\n      const ctx_r29 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r29.call(task_r24));\n    });\n    i0.ɵɵelement(9, \"i\", 52);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"button\", 53);\n    i0.ɵɵlistener(\"click\", function DashboardComponent_div_30_div_4_Template_button_click_10_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r28);\n      const task_r24 = restoredCtx.$implicit;\n      const ctx_r30 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r30.deleteTask(task_r24));\n    });\n    i0.ɵɵelement(11, \"i\", 54);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"button\", 60);\n    i0.ɵɵlistener(\"click\", function DashboardComponent_div_30_div_4_Template_button_click_12_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r28);\n      const task_r24 = restoredCtx.$implicit;\n      const ctx_r31 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r31.incompleteTask(task_r24));\n    });\n    i0.ɵɵelement(13, \"i\", 61);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const task_r24 = ctx.$implicit;\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(task_r24.title);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(task_r24.showDetails ? \"Hide Details\" : \"Show Details\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", task_r24.showDetails);\n  }\n}\nfunction DashboardComponent_div_30_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"h4\", 59);\n    i0.ɵɵtext(2, \"Completed Tasks:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 43);\n    i0.ɵɵtemplate(4, DashboardComponent_div_30_div_4_Template, 14, 3, \"div\", 44);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r5.completedTaskArr);\n  }\n}\nfunction DashboardComponent_div_45_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 62);\n    i0.ɵɵtext(1, \" Task is required and must be at least 3 characters long. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction DashboardComponent_div_49_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 62);\n    i0.ɵɵtext(1, \" Description is required and must be at least 3 characters long. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction DashboardComponent_div_53_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 62);\n    i0.ɵɵtext(1, \" Due Date is required. \");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class DashboardComponent {\n  // Toggle visibility of incomplete tasks section\n  toggleTasksVisibility() {\n    this.showIncompleteTasks = !this.showIncompleteTasks;\n  }\n  // Toggle visibility of complete tasks section\n  toggleCompletedTasksVisibility() {\n    this.showCompleteTasks = !this.showCompleteTasks;\n  }\n  constructor(crudService) {\n    this.crudService = crudService;\n    this.taskObj = new Task();\n    this.completedTaskArr = [];\n    this.incompleteTaskArr = [];\n    this.addTaskValue = '';\n    this.addTaskDescription = '';\n    this.addDueDate = null;\n    this.editTaskValue = '';\n    this.editTaskDescription = '';\n    this.editDueDate = null;\n    this.showIncompleteTasks = true;\n    this.showCompleteTasks = true;\n  }\n  ngOnInit() {\n    this.addTaskDescription = '';\n    this.editTaskDescription = '';\n    this.addDueDate = null;\n    this.editDueDate = null;\n    this.editTaskValue = '';\n    this.addTaskValue = '';\n    this.taskObj = new Task();\n    this.getCompletedTasks();\n    this.getIncompleteTasks();\n    this.incompleteTaskArr.forEach(task => {\n      task.showDetails = false; // Initialize showDetails property to false for each incomplete task\n    });\n\n    this.completedTaskArr.forEach(task => {\n      task.showDetails = false; // Initialize showDetails property to false for each completed task\n    });\n  }\n\n  addTask() {\n    this.taskObj.title = this.addTaskValue;\n    this.taskObj.description = this.addTaskDescription;\n    this.taskObj.dueDate = this.addDueDate;\n    this.crudService.addTask(this.taskObj).subscribe(res => {\n      this.ngOnInit();\n      this.addTaskValue = '';\n      this.addDueDate = null;\n      this.addTaskDescription = '';\n    }, err => {\n      alert(err);\n    });\n  }\n  toggleTaskDetails(task) {\n    task.showDetails = !task.showDetails;\n  }\n  editTask() {\n    this.taskObj.title = this.editTaskValue;\n    this.taskObj.description = this.editTaskDescription;\n    this.taskObj.dueDate = this.editDueDate;\n    this.crudService.editTask(this.taskObj).subscribe(res => {\n      this.ngOnInit();\n    }, err => {\n      alert(\"Failed to update task\");\n    });\n  }\n  deleteTask(etask) {\n    this.crudService.deleteTask(etask).subscribe(res => {\n      this.ngOnInit();\n    }, err => {\n      alert(\"Failed to delete task\");\n    });\n  }\n  call(etask) {\n    this.taskObj = etask;\n    this.editTaskValue = etask.title;\n  }\n  completeTask(etask) {\n    this.crudService.completeTask(etask).subscribe(res => {\n      // Update the local arrays based on the response from the server\n      this.completedTaskArr.push(etask); // Add the completed task to the completed tasks array\n      this.incompleteTaskArr = this.incompleteTaskArr.filter(t => t !== etask); // Remove the task from the incomplete tasks array\n      etask.status = true; // Update the task status locally\n    }, err => {\n      alert(\"Failed to mark task as completed\");\n    });\n  }\n  incompleteTask(etask) {\n    this.crudService.incompleteTask(etask).subscribe(res => {\n      // Update the local arrays based on the response from the server\n      this.incompleteTaskArr.push(etask); // Add the incomplete task to the incomplete tasks array\n      this.completedTaskArr = this.completedTaskArr.filter(t => t !== etask); // Remove the task from the completed tasks array\n      etask.status = false; // Update the task status locally\n    }, err => {\n      alert(\"Failed to mark task as incomplete\");\n    });\n  }\n  getCompletedTasks() {\n    this.crudService.getCompletedTasks().subscribe(res => {\n      this.completedTaskArr = res;\n    }, err => {\n      alert(\"Unable to get completed tasks\");\n    });\n  }\n  getIncompleteTasks() {\n    this.crudService.getIncompleteTasks().subscribe(res => {\n      this.incompleteTaskArr = res;\n    }, err => {\n      alert(\"Unable to get incomplete tasks\");\n    });\n  }\n  static #_ = this.ɵfac = function DashboardComponent_Factory(t) {\n    return new (t || DashboardComponent)(i0.ɵɵdirectiveInject(i1.CrudService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: DashboardComponent,\n    selectors: [[\"app-dashboard\"]],\n    viewQuery: function DashboardComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n        i0.ɵɵviewQuery(_c1, 5);\n        i0.ɵɵviewQuery(_c2, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.taskInput = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.descriptionInput = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.dueDateInput = _t.first);\n      }\n    },\n    decls: 59,\n    vars: 18,\n    consts: [[1, \"container-fluid\", \"back\"], [1, \"container\", \"back\"], [1, \"row\", 2, \"min-height\", \"500px\"], [1, \"col\"], [1, \"col-8\", \"mt-4\"], [1, \"bg-white\", \"shadow\", \"p-4\", \"rounded\"], [1, \"card\", \"mb-3\", \"custom-primary\"], [1, \"text-white\", \"ps-3\", \"pt-2\", \"pb-2\"], [1, \"fa-solid\", \"fa-clipboard-list\", \"fa-lg\", \"me-2\"], [1, \"m-2\"], [\"taskForm\", \"ngForm\"], [1, \"mb-3\"], [\"type\", \"text\", \"placeholder\", \"Enter Task\", \"name\", \"task\", \"required\", \"\", \"minlength\", \"3\", 1, \"form-control\", \"custom-input\", 3, \"ngModel\", \"ngModelChange\"], [\"taskInput\", \"ngModel\"], [\"type\", \"text\", \"placeholder\", \"Description\", \"name\", \"description\", \"required\", \"\", \"minlength\", \"3\", 1, \"form-control\", \"custom-input\", 3, \"ngModel\", \"ngModelChange\"], [\"descriptionInput\", \"ngModel\"], [\"type\", \"date\", \"name\", \"dueDate\", \"required\", \"\", 1, \"form-control\", \"custom-input\", 3, \"ngModel\", \"ngModelChange\"], [\"dueDateInput\", \"ngModel\"], [\"type\", \"button\", 1, \"btn\", \"add\", 3, \"disabled\", \"click\"], [1, \"fa-bounce-on-hover\"], [1, \"mt-4\"], [1, \"btn\", \"hide\", \"m-2\", \"fa-bounce-on-hover\", 3, \"click\"], [1, \"btn\", \"complete\", \"m-2\", \"fa-bounce-on-hover\", 3, \"click\"], [4, \"ngIf\"], [\"id\", \"editModal\", \"tabindex\", \"-1\", \"aria-labelledby\", \"editModalLabel\", \"aria-hidden\", \"true\", 1, \"modal\", \"fade\"], [1, \"modal-dialog\"], [1, \"modal-content\"], [1, \"modal-header\"], [\"id\", \"editModalLabel\", 1, \"modal-title\"], [\"type\", \"button\", \"data-bs-dismiss\", \"modal\", \"aria-label\", \"Close\", 1, \"btn-close\"], [1, \"modal-body\"], [\"editTaskForm\", \"ngForm\"], [\"type\", \"text\", \"placeholder\", \"Enter Task\", \"name\", \"task\", \"required\", \"\", \"minlength\", \"3\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"editTaskInput\", \"ngModel\"], [\"class\", \"text-danger\", 4, \"ngIf\"], [\"type\", \"text\", \"placeholder\", \"Description\", \"name\", \"description\", \"required\", \"\", \"minlength\", \"3\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"editDescriptionInput\", \"ngModel\"], [\"type\", \"date\", \"name\", \"dueDate\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"editDueDateInput\", \"ngModel\"], [1, \"modal-footer\"], [\"type\", \"button\", \"data-bs-dismiss\", \"modal\", 1, \"btn\", \"btn-danger\"], [\"type\", \"button\", \"data-bs-dismiss\", \"modal\", 3, \"disabled\", \"click\"], [1, \"text-primary\", \"mt-4\"], [2, \"overflow-y\", \"auto\", \"max-height\", \"350px\"], [\"class\", \"m-3\", 4, \"ngFor\", \"ngForOf\"], [1, \"m-3\"], [1, \"p-3\", \"rounded\", \"border\", \"shadow\"], [1, \"d-flex\", \"justify-content-between\", \"align-items-center\"], [1, \"btn\", \"details\", 3, \"click\"], [4, \"ngIf\", \"ngIfElse\"], [\"class\", \"mt-2\", 4, \"ngIf\"], [\"data-bs-toggle\", \"modal\", \"type\", \"button\", \"data-bs-target\", \"#editModal\", 1, \"btn\", \"btn-outline-primary\", \"me-2\", 3, \"click\"], [1, \"fa-solid\", \"fa-pencil\", \"fa-bounce-on-hover\"], [1, \"btn\", \"btn-outline-danger\", \"me-2\", 3, \"click\"], [1, \"fa-solid\", \"fa-trash\", \"fa-bounce-on-hover\"], [1, \"btn\", \"btn-outline-success\", 3, \"click\"], [1, \"fa-solid\", \"fa-check\", \"fa-bounce-on-hover\"], [1, \"fa-solid\", \"fa-eye\", \"fa-bounce-on-hover\"], [1, \"mt-2\"], [1, \"text-success\", \"mt-4\"], [1, \"btn\", \"btn-outline-warning\", 3, \"click\"], [1, \"fa-solid\", \"fa-xmark\", \"fa-bounce-on-hover\"], [1, \"text-danger\"]],\n    template: function DashboardComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2);\n        i0.ɵɵelement(3, \"div\", 3);\n        i0.ɵɵelementStart(4, \"div\", 4)(5, \"div\", 5)(6, \"div\", 6)(7, \"h4\", 7);\n        i0.ɵɵelement(8, \"i\", 8);\n        i0.ɵɵtext(9, \"To Do List\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(10, \"form\", 9, 10)(12, \"div\", 11)(13, \"input\", 12, 13);\n        i0.ɵɵlistener(\"ngModelChange\", function DashboardComponent_Template_input_ngModelChange_13_listener($event) {\n          return ctx.addTaskValue = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(15, \"div\", 11)(16, \"input\", 14, 15);\n        i0.ɵɵlistener(\"ngModelChange\", function DashboardComponent_Template_input_ngModelChange_16_listener($event) {\n          return ctx.addTaskDescription = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(18, \"div\", 11)(19, \"input\", 16, 17);\n        i0.ɵɵlistener(\"ngModelChange\", function DashboardComponent_Template_input_ngModelChange_19_listener($event) {\n          return ctx.addDueDate = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(21, \"button\", 18);\n        i0.ɵɵlistener(\"click\", function DashboardComponent_Template_button_click_21_listener() {\n          return ctx.addTask();\n        });\n        i0.ɵɵelementStart(22, \"div\", 19);\n        i0.ɵɵtext(23, \"Add\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(24, \"div\", 20)(25, \"button\", 21);\n        i0.ɵɵlistener(\"click\", function DashboardComponent_Template_button_click_25_listener() {\n          return ctx.toggleTasksVisibility();\n        });\n        i0.ɵɵtext(26);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(27, \"button\", 22);\n        i0.ɵɵlistener(\"click\", function DashboardComponent_Template_button_click_27_listener() {\n          return ctx.toggleCompletedTasksVisibility();\n        });\n        i0.ɵɵtext(28);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(29, DashboardComponent_div_29_Template, 5, 1, \"div\", 23);\n        i0.ɵɵtemplate(30, DashboardComponent_div_30_Template, 5, 1, \"div\", 23);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(31, \"div\", 3);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(32, \"div\", 24)(33, \"div\", 25)(34, \"div\", 26)(35, \"div\", 27)(36, \"h5\", 28);\n        i0.ɵɵtext(37, \"Edit Task\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(38, \"button\", 29);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(39, \"div\", 30)(40, \"form\", null, 31)(42, \"div\", 11)(43, \"input\", 32, 33);\n        i0.ɵɵlistener(\"ngModelChange\", function DashboardComponent_Template_input_ngModelChange_43_listener($event) {\n          return ctx.editTaskValue = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(45, DashboardComponent_div_45_Template, 2, 0, \"div\", 34);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(46, \"div\", 11)(47, \"input\", 35, 36);\n        i0.ɵɵlistener(\"ngModelChange\", function DashboardComponent_Template_input_ngModelChange_47_listener($event) {\n          return ctx.editTaskDescription = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(49, DashboardComponent_div_49_Template, 2, 0, \"div\", 34);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(50, \"div\", 11)(51, \"input\", 37, 38);\n        i0.ɵɵlistener(\"ngModelChange\", function DashboardComponent_Template_input_ngModelChange_51_listener($event) {\n          return ctx.editDueDate = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(53, DashboardComponent_div_53_Template, 2, 0, \"div\", 34);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(54, \"div\", 39)(55, \"button\", 40);\n        i0.ɵɵtext(56, \"Close\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(57, \"button\", 41);\n        i0.ɵɵlistener(\"click\", function DashboardComponent_Template_button_click_57_listener() {\n          return ctx.editTask();\n        });\n        i0.ɵɵtext(58, \"Save changes\");\n        i0.ɵɵelementEnd()()()()();\n      }\n      if (rf & 2) {\n        const _r1 = i0.ɵɵreference(14);\n        const _r2 = i0.ɵɵreference(17);\n        const _r3 = i0.ɵɵreference(20);\n        const _r6 = i0.ɵɵreference(41);\n        const _r7 = i0.ɵɵreference(44);\n        const _r9 = i0.ɵɵreference(48);\n        const _r11 = i0.ɵɵreference(52);\n        i0.ɵɵadvance(13);\n        i0.ɵɵproperty(\"ngModel\", ctx.addTaskValue);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngModel\", ctx.addTaskDescription);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngModel\", ctx.addDueDate);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"disabled\", !(_r1.valid && _r2.valid && _r3.valid));\n        i0.ɵɵadvance(5);\n        i0.ɵɵtextInterpolate1(\" \", ctx.showIncompleteTasks ? \"Hide Incomplete Tasks\" : \"Show Incomplete Tasks\", \" \");\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\" \", ctx.showCompleteTasks ? \"Hide Completed Tasks\" : \"Show Completed Tasks\", \" \");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.showIncompleteTasks);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.showCompleteTasks);\n        i0.ɵɵadvance(13);\n        i0.ɵɵproperty(\"ngModel\", ctx.editTaskValue);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", _r7.invalid && (_r7.dirty || _r7.touched));\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngModel\", ctx.editTaskDescription);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", _r9.invalid && (_r9.dirty || _r9.touched));\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngModel\", ctx.editDueDate);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", _r11.invalid && (_r11.dirty || _r11.touched));\n        i0.ɵɵadvance(4);\n        i0.ɵɵclassMapInterpolate1(\"btn btn-\", _r6.invalid ? \"secondary\" : \"primary\", \"\");\n        i0.ɵɵproperty(\"disabled\", _r6.invalid);\n      }\n    },\n    dependencies: [i2.NgForOf, i2.NgIf, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.MinLengthValidator, i3.NgModel, i3.NgForm, i2.DatePipe],\n    styles: [\".custom-show-details-button[_ngcontent-%COMP%] {\\n    background-color: #ff5733; \\n\\n    color: #fff; \\n\\n    \\n\\n  }\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRhc2hib2FyZC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0kseUJBQXlCLEVBQUUsaUNBQWlDO0lBQzVELFdBQVcsRUFBRSxlQUFlO0lBQzVCLGtDQUFrQztFQUNwQyIsImZpbGUiOiJkYXNoYm9hcmQuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5jdXN0b20tc2hvdy1kZXRhaWxzLWJ1dHRvbiB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmY1NzMzOyAvKiBZb3VyIGN1c3RvbSBiYWNrZ3JvdW5kIGNvbG9yICovXHJcbiAgICBjb2xvcjogI2ZmZjsgLyogVGV4dCBjb2xvciAqL1xyXG4gICAgLyogQWRkIGFueSBvdGhlciBzdHlsZXMgeW91IHdhbnQgKi9cclxuICB9Il19 */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50L2Rhc2hib2FyZC9kYXNoYm9hcmQuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLHlCQUF5QixFQUFFLGlDQUFpQztJQUM1RCxXQUFXLEVBQUUsZUFBZTtJQUM1QixrQ0FBa0M7RUFDcEM7QUFDRixvakJBQW9qQiIsInNvdXJjZXNDb250ZW50IjpbIi5jdXN0b20tc2hvdy1kZXRhaWxzLWJ1dHRvbiB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmY1NzMzOyAvKiBZb3VyIGN1c3RvbSBiYWNrZ3JvdW5kIGNvbG9yICovXHJcbiAgICBjb2xvcjogI2ZmZjsgLyogVGV4dCBjb2xvciAqL1xyXG4gICAgLyogQWRkIGFueSBvdGhlciBzdHlsZXMgeW91IHdhbnQgKi9cclxuICB9Il0sInNvdXJjZVJvb3QiOiIifQ== */\", \".fa-bounce-on-hover[_ngcontent-%COMP%] {\\n            transition: transform 0.2s ease-in-out, font-size 0.2s ease-in-out;\\n        }\\n\\n        .fa-bounce-on-hover[_ngcontent-%COMP%]:hover {\\n            transform: translateY(-5px); \\n\\n            font-size: 1.2em; \\n\\n        }\\n    .custom-primary[_ngcontent-%COMP%] {\\n    background-color: #9F91CC; \\n\\n    \\n\\n    }\\n    .back[_ngcontent-%COMP%]{\\n        background-color: #E8FFCE;\\n    }\\n    .hide[_ngcontent-%COMP%]{\\n        background-color: #96B6C5;\\n    }\\n    .complete[_ngcontent-%COMP%]{\\n        background-color: #5B9A8B;\\n    }\\n    .add[_ngcontent-%COMP%]{\\n        background-color: #9EB384;\\n        color: white;\\n    }\\n    .details[_ngcontent-%COMP%]{\\n        background-color: #F4EEEE;\\n    }\\n    @media (max-width: 320px) {\\n        .details[_ngcontent-%COMP%]   .fa-bounce-on-hover[_ngcontent-%COMP%] {\\n            display: inline-block; \\n\\n        }\\n\\n        .details[_ngcontent-%COMP%]::after {\\n            content: none; \\n\\n        }\\n    }\"]\n  });\n}","map":{"version":3,"names":["Task","i0","ɵɵelementContainerStart","ɵɵelement","ɵɵelementContainerEnd","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","task_r14","description","ɵɵpipeBind1","dueDate","ɵɵlistener","DashboardComponent_div_29_div_4_Template_button_click_5_listener","restoredCtx","ɵɵrestoreView","_r19","$implicit","ctx_r18","ɵɵnextContext","ɵɵresetView","toggleTaskDetails","ɵɵtemplate","DashboardComponent_div_29_div_4_ng_container_6_Template","DashboardComponent_div_29_div_4_div_8_Template","DashboardComponent_div_29_div_4_Template_button_click_9_listener","ctx_r20","call","DashboardComponent_div_29_div_4_Template_button_click_11_listener","ctx_r21","deleteTask","DashboardComponent_div_29_div_4_Template_button_click_13_listener","ctx_r22","completeTask","ɵɵtextInterpolate","title","ɵɵproperty","ctx_r13","isSmallScreen","showDetailsButton","showDetails","DashboardComponent_div_29_div_4_Template","ctx_r4","incompleteTaskArr","task_r24","DashboardComponent_div_30_div_4_Template_button_click_5_listener","_r28","ctx_r27","DashboardComponent_div_30_div_4_div_7_Template","DashboardComponent_div_30_div_4_Template_button_click_8_listener","ctx_r29","DashboardComponent_div_30_div_4_Template_button_click_10_listener","ctx_r30","DashboardComponent_div_30_div_4_Template_button_click_12_listener","ctx_r31","incompleteTask","DashboardComponent_div_30_div_4_Template","ctx_r5","completedTaskArr","DashboardComponent","toggleTasksVisibility","showIncompleteTasks","toggleCompletedTasksVisibility","showCompleteTasks","constructor","crudService","taskObj","addTaskValue","addTaskDescription","addDueDate","editTaskValue","editTaskDescription","editDueDate","ngOnInit","getCompletedTasks","getIncompleteTasks","forEach","task","addTask","subscribe","res","err","alert","editTask","etask","push","filter","t","status","_","ɵɵdirectiveInject","i1","CrudService","_2","selectors","viewQuery","DashboardComponent_Query","rf","ctx","DashboardComponent_Template_input_ngModelChange_13_listener","$event","DashboardComponent_Template_input_ngModelChange_16_listener","DashboardComponent_Template_input_ngModelChange_19_listener","DashboardComponent_Template_button_click_21_listener","DashboardComponent_Template_button_click_25_listener","DashboardComponent_Template_button_click_27_listener","DashboardComponent_div_29_Template","DashboardComponent_div_30_Template","DashboardComponent_Template_input_ngModelChange_43_listener","DashboardComponent_div_45_Template","DashboardComponent_Template_input_ngModelChange_47_listener","DashboardComponent_div_49_Template","DashboardComponent_Template_input_ngModelChange_51_listener","DashboardComponent_div_53_Template","DashboardComponent_Template_button_click_57_listener","_r1","valid","_r2","_r3","_r7","invalid","dirty","touched","_r9","_r11","ɵɵclassMapInterpolate1","_r6"],"sources":["C:\\Users\\sgaut\\Documents\\tolist\\to-dolist\\src\\app\\component\\dashboard\\dashboard.component.ts","C:\\Users\\sgaut\\Documents\\tolist\\to-dolist\\src\\app\\component\\dashboard\\dashboard.component.html"],"sourcesContent":["import { Component, ViewChild } from '@angular/core';\nimport { Task } from 'src/app/model/task';\nimport { CrudService } from 'src/app/service/crud.service';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent {\n  @ViewChild('taskInput') taskInput: any;\n  @ViewChild('descriptionInput') descriptionInput: any;\n  @ViewChild('dueDateInput') dueDateInput: any;\n  taskObj: Task = new Task();\n  completedTaskArr: Task[] = [];\n  incompleteTaskArr: Task[] = [];\n\n  addTaskValue: string = '';\n  addTaskDescription: string = '';\n  addDueDate: Date | null = null;\n  editTaskValue: string = '';\n  editTaskDescription: string = '';\n  editDueDate: Date | null = null;\n  showIncompleteTasks: boolean = true;\n  showCompleteTasks: boolean = true;\n\n  // Toggle visibility of incomplete tasks section\n  toggleTasksVisibility() {\n      this.showIncompleteTasks = !this.showIncompleteTasks;\n  }\n\n  // Toggle visibility of complete tasks section\n  toggleCompletedTasksVisibility() {\n      this.showCompleteTasks = !this.showCompleteTasks;\n  }\n\n\n  constructor(private crudService: CrudService) { }\n\n  ngOnInit(): void {\n    this.addTaskDescription = '';\n    this.editTaskDescription = '';\n    this.addDueDate = null;\n    this.editDueDate = null;\n    this.editTaskValue = '';\n    this.addTaskValue = '';\n    this.taskObj = new Task();\n    this.getCompletedTasks();\n    this.getIncompleteTasks();\n    this.incompleteTaskArr.forEach(task => {\n      task.showDetails = false; // Initialize showDetails property to false for each incomplete task\n    });\n    this.completedTaskArr.forEach(task => {\n      task.showDetails = false; // Initialize showDetails property to false for each completed task\n    });\n  }\n\n  addTask() {\n    this.taskObj.title = this.addTaskValue;\n    this.taskObj.description = this.addTaskDescription;\n    this.taskObj.dueDate = this.addDueDate;\n    this.crudService.addTask(this.taskObj).subscribe(res => {\n      this.ngOnInit();\n      this.addTaskValue = '';\n      this.addDueDate = null;\n      this.addTaskDescription = '';\n    }, err => {\n      alert(err);\n    })\n  }\n  toggleTaskDetails(task: Task) {\n    task.showDetails = !task.showDetails;\n  }\n  \n  editTask() {\n    this.taskObj.title = this.editTaskValue;\n    this.taskObj.description = this.editTaskDescription;\n    this.taskObj.dueDate = this.editDueDate;\n    this.crudService.editTask(this.taskObj).subscribe(res => {\n      this.ngOnInit();\n    }, err => {\n      alert(\"Failed to update task\");\n    })\n  }\n\n  deleteTask(etask: Task) {\n    this.crudService.deleteTask(etask).subscribe(res => {\n      this.ngOnInit();\n    }, err => {\n      alert(\"Failed to delete task\")\n    })\n  }\n\n  call(etask: Task) {\n    this.taskObj = etask;\n    this.editTaskValue = etask.title;\n  }\n\n  completeTask(etask: Task) {\n    this.crudService.completeTask(etask).subscribe(res => {\n      // Update the local arrays based on the response from the server\n      this.completedTaskArr.push(etask); // Add the completed task to the completed tasks array\n      this.incompleteTaskArr = this.incompleteTaskArr.filter(t => t !== etask); // Remove the task from the incomplete tasks array\n      etask.status = true; // Update the task status locally\n    }, err => {\n      alert(\"Failed to mark task as completed\");\n    });\n  }\n  \n  incompleteTask(etask: Task) {\n    this.crudService.incompleteTask(etask).subscribe(res => {\n      // Update the local arrays based on the response from the server\n      this.incompleteTaskArr.push(etask); // Add the incomplete task to the incomplete tasks array\n      this.completedTaskArr = this.completedTaskArr.filter(t => t !== etask); // Remove the task from the completed tasks array\n      etask.status = false; // Update the task status locally\n    }, err => {\n      alert(\"Failed to mark task as incomplete\");\n    });\n  }\n  \n\n  getCompletedTasks() {\n    this.crudService.getCompletedTasks().subscribe(res => {\n      this.completedTaskArr = res;\n    }, err => {\n      alert(\"Unable to get completed tasks\");\n    });\n  }\n\n  getIncompleteTasks() {\n    this.crudService.getIncompleteTasks().subscribe(res => {\n      this.incompleteTaskArr = res;\n    }, err => {\n      alert(\"Unable to get incomplete tasks\");\n    });\n  }\n}\n","<style>\n    .fa-bounce-on-hover {\n            transition: transform 0.2s ease-in-out, font-size 0.2s ease-in-out;\n        }\n\n        .fa-bounce-on-hover:hover {\n            transform: translateY(-5px); /* Adjust the distance of the bounce */\n            font-size: 1.2em; /* Increase the font size on hover */\n        }\n    .custom-primary {\n    background-color: #9F91CC; /* Blue color */\n    /* You can also set other properties like background-color, border-color, etc. */\n    }\n    .back{\n        background-color: #E8FFCE;\n    }\n    .hide{\n        background-color: #96B6C5;\n    }\n    .complete{\n        background-color: #5B9A8B;\n    }\n    .add{\n        background-color: #9EB384;\n        color: white;\n    }\n    .details{\n        background-color: #F4EEEE;\n    }\n    @media (max-width: 320px) {\n        .details .fa-bounce-on-hover {\n            display: inline-block; /* Show the Font Awesome icon on small screens */\n        }\n\n        .details::after {\n            content: none; /* Hide the \"Show Details\" text on small screens */\n        }\n    }\n</style>\n<div class=\"container-fluid back\">\n    <div class=\"container back\">\n      <div class=\"row\" style=\"min-height: 500px;\">\n        <div class=\"col\"></div>\n        <div class=\"col-8 mt-4\">\n          <div class=\"bg-white shadow p-4 rounded\">\n            <div class=\"card mb-3 custom-primary\">\n              <h4 class=\"text-white ps-3 pt-2 pb-2\"><i class=\"fa-solid fa-clipboard-list fa-lg me-2\"></i>To Do List</h4>\n            </div>\n            <form #taskForm=\"ngForm\" class=\"m-2\">\n              <div class=\"mb-3\">\n                <input type=\"text\" class=\"form-control custom-input\" placeholder=\"Enter Task\" name=\"task\" [(ngModel)]=\"addTaskValue\"\n                  required minlength=\"3\" #taskInput=\"ngModel\">\n              </div>\n              <div class=\"mb-3\">\n                <input type=\"text\" class=\"form-control custom-input\" placeholder=\"Description\" name=\"description\" [(ngModel)]=\"addTaskDescription\"\n                  required minlength=\"3\" #descriptionInput=\"ngModel\">\n              </div>\n              <div class=\"mb-3\">\n                <input type=\"date\" class=\"form-control custom-input\" name=\"dueDate\" [(ngModel)]=\"addDueDate\" required #dueDateInput=\"ngModel\">\n              </div>\n              <button class=\"btn add\" [disabled]=\"!(taskInput.valid && descriptionInput.valid && dueDateInput.valid)\" \n                type=\"button\" (click)=\"addTask()\"><div class=\"fa-bounce-on-hover\">Add</div></button>\n            </form>\n            <div class=\"mt-4\">\n                <button class=\"btn hide m-2 fa-bounce-on-hover\" (click)=\"toggleTasksVisibility()\">\n                    {{ showIncompleteTasks ? 'Hide Incomplete Tasks' : 'Show Incomplete Tasks' }}\n                </button>\n                <button class=\"btn complete m-2 fa-bounce-on-hover\" (click)=\"toggleCompletedTasksVisibility()\">\n                    {{ showCompleteTasks ? 'Hide Completed Tasks' : 'Show Completed Tasks' }}\n                </button>\n            </div>\n        <div *ngIf=\"showIncompleteTasks\">\n          <h4 class=\"text-primary mt-4\">Incomplete Tasks:</h4>\n          <div style=\"overflow-y:auto; max-height: 350px;\">\n            <div class=\"m-3\" *ngFor=\"let task of incompleteTaskArr\">\n              <div class=\"p-3 rounded border shadow\">\n                <div class=\"d-flex justify-content-between align-items-center\">\n                  <h5>{{ task.title }}</h5>\n                  <button class=\"btn details\"  (click)=\"toggleTaskDetails(task)\">\n                    <ng-container *ngIf=\"isSmallScreen; else showDetailsButton\">\n                        <i class=\"fa-solid fa-eye fa-bounce-on-hover\"></i>\n                    </ng-container>\n                    {{ task.showDetails ? 'Hide Details' : 'Show Details' }}\n                </button>\n                </div>\n                <div *ngIf=\"task.showDetails\" class=\"mt-2\">\n                  <p>Description: {{ task.description }}</p>\n                  <p>Due Date: {{ task.dueDate | date }}</p>\n                </div>\n                <button class=\"btn btn-outline-primary me-2\" data-bs-toggle=\"modal\" type=\"button\" data-bs-target=\"#editModal\"\n                    (click)=\"call(task)\"><i class=\"fa-solid fa-pencil fa-bounce-on-hover\"></i></button>\n                <button class=\"btn btn-outline-danger me-2\" (click)=\"deleteTask(task)\"><i class=\"fa-solid fa-trash fa-bounce-on-hover\"></i></button>\n                <button class=\"btn btn-outline-success\" (click)=\"completeTask(task)\"><i class=\"fa-solid fa-check fa-bounce-on-hover\"></i></button>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div *ngIf=\"showCompleteTasks\">\n          <h4 class=\"text-success mt-4\">Completed Tasks:</h4>\n          <div style=\"overflow-y:auto; max-height: 350px;\">\n            <div class=\"m-3\" *ngFor=\"let task of completedTaskArr\">\n              <div class=\"p-3 rounded border shadow\">\n                <div class=\"d-flex justify-content-between align-items-center\">\n                  <h5>{{ task.title }}</h5>\n                  <button class=\"btn details\" (click)=\"toggleTaskDetails(task)\">{{ task.showDetails ? 'Hide Details' : 'Show Details' }}</button>\n                </div>\n                <div *ngIf=\"task.showDetails\" class=\"mt-2\">\n                  <p>Description: {{ task.description }}</p>\n                  <p>Due Date: {{ task.dueDate | date }}</p>\n                </div>\n                <button class=\"btn btn-outline-primary me-2\" data-bs-toggle=\"modal\" type=\"button\" data-bs-target=\"#editModal\"\n                    (click)=\"call(task)\"><i class=\"fa-solid fa-pencil fa-bounce-on-hover\"></i></button>\n                <button class=\"btn btn-outline-danger me-2\" (click)=\"deleteTask(task)\"><i class=\"fa-solid fa-trash fa-bounce-on-hover\"></i></button>\n                <button class=\"btn btn-outline-warning\" (click)=\"incompleteTask(task)\"><i class=\"fa-solid fa-xmark fa-bounce-on-hover\"></i></button>\n              </div>\n            </div>\n          </div>\n        </div>\n\n          </div>\n        </div>\n        <div class=\"col\"></div>\n      </div>\n    </div>\n  </div>\n  \n  <!-- Edit Task Modal -->\n<div class=\"modal fade\" id=\"editModal\" tabindex=\"-1\" aria-labelledby=\"editModalLabel\" aria-hidden=\"true\">\n    <div class=\"modal-dialog\">\n      <div class=\"modal-content\">\n        <div class=\"modal-header\">\n          <h5 class=\"modal-title\" id=\"editModalLabel\">Edit Task</h5>\n          <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n        </div>\n        <div class=\"modal-body\">\n          <form #editTaskForm=\"ngForm\">\n            <div class=\"mb-3\">\n              <input type=\"text\" class=\"form-control\" placeholder=\"Enter Task\" name=\"task\" [(ngModel)]=\"editTaskValue\"\n                required minlength=\"3\" #editTaskInput=\"ngModel\">\n              <div class=\"text-danger\" *ngIf=\"editTaskInput.invalid && (editTaskInput.dirty || editTaskInput.touched)\">\n                Task is required and must be at least 3 characters long.\n              </div>\n            </div>\n            <div class=\"mb-3\">\n              <input type=\"text\" class=\"form-control\" placeholder=\"Description\" name=\"description\" [(ngModel)]=\"editTaskDescription\"\n                required minlength=\"3\" #editDescriptionInput=\"ngModel\">\n              <div class=\"text-danger\" *ngIf=\"editDescriptionInput.invalid && (editDescriptionInput.dirty || editDescriptionInput.touched)\">\n                Description is required and must be at least 3 characters long.\n              </div>\n            </div>\n            <div class=\"mb-3\">\n              <input type=\"date\" class=\"form-control\" name=\"dueDate\" [(ngModel)]=\"editDueDate\" required #editDueDateInput=\"ngModel\">\n              <div class=\"text-danger\" *ngIf=\"editDueDateInput.invalid && (editDueDateInput.dirty || editDueDateInput.touched)\">\n                Due Date is required.\n              </div>\n            </div>\n          </form>\n        </div>\n        <div class=\"modal-footer\">\n          <button type=\"button\" class=\"btn btn-danger\" data-bs-dismiss=\"modal\">Close</button>\n          <button type=\"button\" class=\"btn btn-{{ editTaskForm.invalid ? 'secondary' : 'primary' }}\" data-bs-dismiss=\"modal\" (click)=\"editTask()\" [disabled]=\"editTaskForm.invalid\">Save changes</button>\n        </div>\n      </div>\n    </div>\n  </div>\n  \n  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}