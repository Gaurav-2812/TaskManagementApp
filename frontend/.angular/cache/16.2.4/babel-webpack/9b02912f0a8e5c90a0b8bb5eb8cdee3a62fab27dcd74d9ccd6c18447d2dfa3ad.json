{"ast":null,"code":"import { Task } from 'src/app/model/task';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/service/crud.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction DashboardComponent_div_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 14)(1, \"div\", 15)(2, \"div\", 16)(3, \"div\", 17);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"button\", 18);\n    i0.ɵɵtext(6, \"e\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"div\", 19);\n    i0.ɵɵtext(8, \"X\");\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const task_r1 = ctx.$implicit;\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(task_r1.task_name);\n  }\n}\nexport class DashboardComponent {\n  constructor(crudService) {\n    this.crudService = crudService;\n    this.taskObj = new Task();\n    this.taskArr = [];\n    this.addTaskValue = '';\n  }\n  ngOnInit() {\n    this.taskObj = new Task();\n    this.taskArr = [];\n    this.getAllTask();\n  }\n  getAllTask() {\n    this.crudService.getAllTask().subscribe(res => {\n      this.taskArr = res;\n    }, err => {\n      alert(\"Unable to get list of tasks\");\n    });\n  }\n  addTask() {\n    this.taskObj.task_name = this.addTaskValue;\n    this.crudService.addTask(this.taskObj).subscribe(res => {\n      this.ngOnInit();\n      this.addTaskValue = '';\n    }, err => {\n      alert(err);\n    });\n  }\n  editTask() {\n    this.crudService.editTask(this.taskObj).subscribe(res => {\n      this.ngOnInit();\n    }, err => {\n      alert(\"Failed to update task\");\n    });\n  }\n  deleteTask(etask) {\n    this.crudService.deleteTask(etask).subscribe(res => {\n      this.ngOnInit();\n    }, err => {\n      alert(\"Failed to delete task\");\n    });\n  }\n  static #_ = this.ɵfac = function DashboardComponent_Factory(t) {\n    return new (t || DashboardComponent)(i0.ɵɵdirectiveInject(i1.CrudService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: DashboardComponent,\n    selectors: [[\"app-dashboard\"]],\n    decls: 18,\n    vars: 2,\n    consts: [[1, \"container-fluid\", \"bg-light\"], [1, \"container\", \"bg-light\"], [1, \"row\", \"mt-4\", 2, \"height\", \"500px\"], [1, \"col\"], [1, \"col-md-6\", \"bg-white\", \"shadow\"], [1, \"card\", \"bg-warning\", \"mt-4\"], [1, \"text-white\", \"ps-3\", \"pt-2\", \"pb-2\"], [1, \"shadow\"], [1, \"input-group\", \"p-4\"], [\"type\", \"text\", \"placeholder\", \"Enter Task\", \"name\", \"task\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"button\", 1, \"btn\", \"btn-outline-success\", 3, \"click\"], [1, \"text-primary\", \"mt-4\"], [2, \"overflow-y\", \"auto\", \"height\", \"350px\"], [\"class\", \"m-3\", 4, \"ngFor\", \"ngForOf\"], [1, \"m-3\"], [1, \"p-2\", \"shadow\", \"border\"], [1, \"input-group\", \"row\", \"ps-3\"], [1, \"card\", \"col-md-10\", \"border-0\", \"m-auto\"], [1, \"btn\", \"btn-outline-primary\", \"col\", \"me-2\"], [1, \"btn\", \"btn-outline-danger\", \"col\"]],\n    template: function DashboardComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2);\n        i0.ɵɵelement(3, \"div\", 3);\n        i0.ɵɵelementStart(4, \"div\", 4)(5, \"div\", 5)(6, \"h4\", 6);\n        i0.ɵɵtext(7, \"To Do List\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(8, \"div\", 7)(9, \"div\", 8)(10, \"input\", 9);\n        i0.ɵɵlistener(\"ngModelChange\", function DashboardComponent_Template_input_ngModelChange_10_listener($event) {\n          return ctx.addTaskValue = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"button\", 10);\n        i0.ɵɵlistener(\"click\", function DashboardComponent_Template_button_click_11_listener() {\n          return ctx.addTask();\n        });\n        i0.ɵɵtext(12, \"Add\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(13, \"h4\", 11);\n        i0.ɵɵtext(14, \"Tasks : \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"div\", 12);\n        i0.ɵɵtemplate(16, DashboardComponent_div_16_Template, 9, 1, \"div\", 13);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(17, \"div\", 3);\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(10);\n        i0.ɵɵproperty(\"ngModel\", ctx.addTaskValue);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngForOf\", ctx.taskArr);\n      }\n    },\n    dependencies: [i2.NgForOf, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgModel],\n    styles: [\"/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJkYXNoYm9hcmQuY29tcG9uZW50LmNzcyJ9 */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50L2Rhc2hib2FyZC9kYXNoYm9hcmQuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQ0Esb0tBQW9LIiwic291cmNlUm9vdCI6IiJ9 */\"]\n  });\n}","map":{"version":3,"names":["Task","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","task_r1","task_name","DashboardComponent","constructor","crudService","taskObj","taskArr","addTaskValue","ngOnInit","getAllTask","subscribe","res","err","alert","addTask","editTask","deleteTask","etask","_","ɵɵdirectiveInject","i1","CrudService","_2","selectors","decls","vars","consts","template","DashboardComponent_Template","rf","ctx","ɵɵelement","ɵɵlistener","DashboardComponent_Template_input_ngModelChange_10_listener","$event","DashboardComponent_Template_button_click_11_listener","ɵɵtemplate","DashboardComponent_div_16_Template","ɵɵproperty"],"sources":["C:\\Users\\sgaut\\Documents\\tolist\\to-dolist\\src\\app\\component\\dashboard\\dashboard.component.ts","C:\\Users\\sgaut\\Documents\\tolist\\to-dolist\\src\\app\\component\\dashboard\\dashboard.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { Task } from 'src/app/model/task';\nimport { CrudService } from 'src/app/service/crud.service';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent {\n\n  taskObj : Task = new Task();\n  taskArr : Task[] = [];\n\n  addTaskValue : string = ''; \n\n  constructor(private crudService : CrudService) {}\n\n  ngOnInit() : void{\n    this.taskObj = new Task();\n    this.taskArr = [];\n    this.getAllTask();\n  }\n  getAllTask() {\n    this.crudService.getAllTask().subscribe(res => {\n      this.taskArr = res;\n    },err =>{\n      alert(\"Unable to get list of tasks\");\n    })\n  }\n\n  addTask(){\n    this.taskObj.task_name = this.addTaskValue;\n    this.crudService.addTask(this.taskObj).subscribe(res =>{\n      this.ngOnInit();\n      this.addTaskValue = '';\n    }, err => {\n      alert(err);\n    })\n  }\n  editTask(){\n    this.crudService.editTask(this.taskObj).subscribe(res => {\n      this.ngOnInit();\n    },err =>{\n      alert(\"Failed to update task\");\n    })\n  }\n  deleteTask(etask : Task){\n    this.crudService.deleteTask(etask).subscribe(res =>{\n      this.ngOnInit();\n    },err=>{\n      alert(\"Failed to delete task\")\n    })\n  }\n}\n","<div class=\"container-fluid bg-light\">\n    <div class=\"container bg-light\">\n        <div class=\"row mt-4\" style=\"height: 500px;\">\n            <div class=\"col\"></div>\n            <div class=\"col-md-6 bg-white shadow\">\n                <div class=\"card bg-warning mt-4\">\n                    <h4 class=\"text-white ps-3 pt-2 pb-2\">To Do List</h4>\n                </div>\n                <div class=\"shadow\">\n                    <div class=\"input-group p-4\">\n                        <input type=\"text\" class=\"form-control\" placeholder=\"Enter Task\" name=\"task\" [(ngModel)]=\"addTaskValue\">\n                        <button class = \"btn btn-outline-success\" type=\"button\" (click)=\"addTask()\">Add</button>\n                    </div>\n                </div>\n                <h4 class=\"text-primary mt-4\">Tasks : </h4>\n                <div style=\"overflow-y:auto; height: 350px;\">\n                    <div class=\"m-3\" *ngFor=\"let task of taskArr\"> \n                        <div class=\"p-2 shadow border\">\n                            <div class=\"input-group row ps-3\">\n                                <div class=\"card col-md-10 border-0 m-auto\">{{task.task_name}}</div>\n                                <button class=\"btn btn-outline-primary col me-2\">e</button>\n                                <div class=\"btn btn-outline-danger col\">X</div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"col\"></div>\n\n        </div>\n    </div>\n</div>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}