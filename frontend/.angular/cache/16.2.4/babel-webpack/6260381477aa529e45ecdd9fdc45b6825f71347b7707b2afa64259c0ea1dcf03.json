{"ast":null,"code":"import { Task } from 'src/app/model/task';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/service/crud.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction DashboardComponent_div_21_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 28)(1, \"div\", 29)(2, \"div\", 30)(3, \"div\", 31);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"button\", 32);\n    i0.ɵɵlistener(\"click\", function DashboardComponent_div_21_Template_button_click_5_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r6);\n      const task_r4 = restoredCtx.$implicit;\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.call(task_r4));\n    });\n    i0.ɵɵtext(6, \"e\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"div\", 33);\n    i0.ɵɵlistener(\"click\", function DashboardComponent_div_21_Template_div_click_7_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r6);\n      const task_r4 = restoredCtx.$implicit;\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.deleteTask(task_r4));\n    });\n    i0.ɵɵtext(8, \"X\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"button\", 34);\n    i0.ɵɵlistener(\"click\", function DashboardComponent_div_21_Template_button_click_9_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r6);\n      const task_r4 = restoredCtx.$implicit;\n      const ctx_r8 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r8.completeTask(task_r4));\n    });\n    i0.ɵɵtext(10, \"Complete\");\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const task_r4 = ctx.$implicit;\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(task_r4.title);\n  }\n}\nfunction DashboardComponent_div_25_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r11 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 28)(1, \"div\", 29)(2, \"div\", 30)(3, \"div\", 31);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"button\", 32);\n    i0.ɵɵlistener(\"click\", function DashboardComponent_div_25_Template_button_click_5_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r11);\n      const task_r9 = restoredCtx.$implicit;\n      const ctx_r10 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r10.call(task_r9));\n    });\n    i0.ɵɵtext(6, \"e\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"div\", 33);\n    i0.ɵɵlistener(\"click\", function DashboardComponent_div_25_Template_div_click_7_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r11);\n      const task_r9 = restoredCtx.$implicit;\n      const ctx_r12 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r12.deleteTask(task_r9));\n    });\n    i0.ɵɵtext(8, \"X\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"button\", 35);\n    i0.ɵɵlistener(\"click\", function DashboardComponent_div_25_Template_button_click_9_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r11);\n      const task_r9 = restoredCtx.$implicit;\n      const ctx_r13 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r13.incompleteTask(task_r9));\n    });\n    i0.ɵɵtext(10, \"Not Done\");\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const task_r9 = ctx.$implicit;\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(task_r9.title);\n  }\n}\nexport class DashboardComponent {\n  constructor(crudService) {\n    this.crudService = crudService;\n    this.taskObj = new Task();\n    this.completedTaskArr = [];\n    this.incompleteTaskArr = [];\n    this.addTaskValue = '';\n    this.addTaskDescription = '';\n    this.addDueDate = null;\n    this.editTaskValue = '';\n    this.editTaskDescription = '';\n    this.editDueDate = null;\n  }\n  ngOnInit() {\n    this.addTaskDescription = '';\n    this.editTaskDescription = '';\n    this.addDueDate = null;\n    this.editDueDate = null;\n    this.editTaskValue = '';\n    this.addTaskValue = '';\n    this.taskObj = new Task();\n    this.getCompletedTasks();\n    this.getIncompleteTasks();\n  }\n  addTask() {\n    this.taskObj.title = this.addTaskValue;\n    this.taskObj.description = this.addTaskDescription;\n    this.taskObj.dueDate = this.addDueDate;\n    this.crudService.addTask(this.taskObj).subscribe(res => {\n      this.ngOnInit();\n      this.addTaskValue = '';\n      this.addDueDate = null;\n      this.addTaskDescription = '';\n    }, err => {\n      alert(err);\n    });\n  }\n  editTask() {\n    this.taskObj.title = this.editTaskValue;\n    this.taskObj.description = this.editTaskDescription;\n    this.taskObj.dueDate = this.editDueDate;\n    this.crudService.editTask(this.taskObj).subscribe(res => {\n      this.ngOnInit();\n    }, err => {\n      alert(\"Failed to update task\");\n    });\n  }\n  deleteTask(etask) {\n    this.crudService.deleteTask(etask).subscribe(res => {\n      this.ngOnInit();\n    }, err => {\n      alert(\"Failed to delete task\");\n    });\n  }\n  call(etask) {\n    this.taskObj = etask;\n    this.editTaskValue = etask.title;\n  }\n  completeTask(etask) {\n    this.crudService.completeTask(etask).subscribe(res => {\n      this.ngOnInit();\n    }, err => {\n      alert(\"Failed to mark task as completed\");\n    });\n  }\n  incompleteTask(etask) {\n    this.crudService.incompleteTask(etask).subscribe(res => {\n      this.ngOnInit();\n    }, err => {\n      alert(\"Failed to mark task as incomplete\");\n    });\n  }\n  getCompletedTasks() {\n    this.crudService.getCompletedTasks().subscribe(res => {\n      this.completedTaskArr = res;\n    }, err => {\n      alert(\"Unable to get completed tasks\");\n    });\n  }\n  getIncompleteTasks() {\n    this.crudService.getIncompleteTasks().subscribe(res => {\n      this.incompleteTaskArr = res;\n    }, err => {\n      alert(\"Unable to get incomplete tasks\");\n    });\n  }\n  static #_ = this.ɵfac = function DashboardComponent_Factory(t) {\n    return new (t || DashboardComponent)(i0.ɵɵdirectiveInject(i1.CrudService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: DashboardComponent,\n    selectors: [[\"app-dashboard\"]],\n    decls: 41,\n    vars: 13,\n    consts: [[1, \"container-fluid\", \"bg-light\"], [1, \"container\", \"bg-light\"], [1, \"row\", \"mt-4\", 2, \"height\", \"500px\"], [1, \"col\"], [1, \"col-md-6\", \"bg-white\", \"shadow\"], [1, \"card\", \"bg-warning\", \"mt-4\"], [1, \"text-white\", \"ps-3\", \"pt-2\", \"pb-2\"], [1, \"shadow\"], [\"taskForm\", \"ngForm\"], [1, \"input-group\", \"p-4\"], [\"type\", \"text\", \"placeholder\", \"Enter Task\", \"name\", \"task\", \"required\", \"\", \"minlength\", \"3\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"taskInput\", \"ngModel\"], [\"type\", \"text\", \"placeholder\", \"Description\", \"name\", \"description\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"date\", \"name\", \"dueDate\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"button\", 1, \"btn\", 3, \"disabled\", \"click\"], [1, \"text-primary\", \"mt-4\"], [2, \"overflow-y\", \"auto\", \"height\", \"350px\"], [\"class\", \"m-3\", 4, \"ngFor\", \"ngForOf\"], [1, \"text-success\", \"mt-4\"], [\"id\", \"exampleModal\", \"tabindex\", \"-1\", \"aria-labelledby\", \"exampleModalLabel\", \"aria-hidden\", \"true\", 1, \"modal\", \"fade\"], [1, \"modal-dialog\"], [1, \"modal-content\"], [1, \"modal-header\"], [\"id\", \"exampleModalLabel\", 1, \"modal-title\", \"fs-5\"], [\"type\", \"button\", \"data-bs-dismiss\", \"modal\", \"aria-label\", \"Close\", 1, \"btn-close\"], [1, \"modal-body\"], [\"type\", \"text\", \"placeholder\", \"Enter Task\", \"name\", \"task\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"button\", \"data-bs-dismiss\", \"modal\", 1, \"btn\", \"btn-outline-success\", 3, \"click\"], [1, \"m-3\"], [1, \"p-2\", \"shadow\", \"border\"], [1, \"input-group\", \"row\", \"ps-3\"], [1, \"card\", \"col-md-10\", \"border-0\", \"m-auto\"], [\"data-bs-toggle\", \"modal\", \"type\", \"button\", \"data-bs-target\", \"#exampleModal\", 1, \"btn\", \"btn-outline-primary\", \"col\", \"me-2\", 3, \"click\"], [1, \"btn\", \"btn-outline-danger\", \"col\", 3, \"click\"], [1, \"btn\", \"btn-outline-success\", \"col\", 3, \"click\"], [1, \"btn\", \"btn-outline-warning\", \"col\", 3, \"click\"]],\n    template: function DashboardComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2);\n        i0.ɵɵelement(3, \"div\", 3);\n        i0.ɵɵelementStart(4, \"div\", 4)(5, \"div\", 5)(6, \"h4\", 6);\n        i0.ɵɵtext(7, \"To Do List\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(8, \"div\", 7)(9, \"form\", null, 8)(11, \"div\", 9)(12, \"input\", 10, 11);\n        i0.ɵɵlistener(\"ngModelChange\", function DashboardComponent_Template_input_ngModelChange_12_listener($event) {\n          return ctx.addTaskValue = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"input\", 12);\n        i0.ɵɵlistener(\"ngModelChange\", function DashboardComponent_Template_input_ngModelChange_14_listener($event) {\n          return ctx.addTaskDescription = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"input\", 13);\n        i0.ɵɵlistener(\"ngModelChange\", function DashboardComponent_Template_input_ngModelChange_15_listener($event) {\n          return ctx.addDueDate = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"button\", 14);\n        i0.ɵɵlistener(\"click\", function DashboardComponent_Template_button_click_16_listener() {\n          return ctx.addTask();\n        });\n        i0.ɵɵtext(17, \"Add\");\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(18, \"h4\", 15);\n        i0.ɵɵtext(19, \"Tasks:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"div\", 16);\n        i0.ɵɵtemplate(21, DashboardComponent_div_21_Template, 11, 1, \"div\", 17);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(22, \"h4\", 18);\n        i0.ɵɵtext(23, \"Completed Tasks:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(24, \"div\", 16);\n        i0.ɵɵtemplate(25, DashboardComponent_div_25_Template, 11, 1, \"div\", 17);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(26, \"div\", 19)(27, \"div\", 20)(28, \"div\", 21)(29, \"div\", 22)(30, \"h1\", 23);\n        i0.ɵɵtext(31, \"Edit Task\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(32, \"button\", 24);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(33, \"div\", 25)(34, \"div\", 9)(35, \"input\", 26);\n        i0.ɵɵlistener(\"ngModelChange\", function DashboardComponent_Template_input_ngModelChange_35_listener($event) {\n          return ctx.editTaskValue = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(36, \"input\", 12);\n        i0.ɵɵlistener(\"ngModelChange\", function DashboardComponent_Template_input_ngModelChange_36_listener($event) {\n          return ctx.editTaskDescription = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(37, \"input\", 13);\n        i0.ɵɵlistener(\"ngModelChange\", function DashboardComponent_Template_input_ngModelChange_37_listener($event) {\n          return ctx.editDueDate = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(38, \"button\", 27);\n        i0.ɵɵlistener(\"click\", function DashboardComponent_Template_button_click_38_listener() {\n          return ctx.editTask();\n        });\n        i0.ɵɵtext(39, \"Update\");\n        i0.ɵɵelementEnd()()()()()()();\n        i0.ɵɵelement(40, \"div\", 3);\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        const _r1 = i0.ɵɵreference(13);\n        i0.ɵɵadvance(12);\n        i0.ɵɵproperty(\"ngModel\", ctx.addTaskValue);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngModel\", ctx.addTaskDescription);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngModel\", ctx.addDueDate);\n        i0.ɵɵadvance(1);\n        i0.ɵɵclassProp(\"btn-outline-success\", _r1.valid)(\"btn-secondary\", !_r1.valid);\n        i0.ɵɵproperty(\"disabled\", !_r1.valid);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngForOf\", ctx.incompleteTaskArr);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngForOf\", ctx.completedTaskArr);\n        i0.ɵɵadvance(10);\n        i0.ɵɵproperty(\"ngModel\", ctx.editTaskValue);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngModel\", ctx.editTaskDescription);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngModel\", ctx.editDueDate);\n      }\n    },\n    dependencies: [i2.NgForOf, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.MinLengthValidator, i3.NgModel, i3.NgForm],\n    styles: [\"/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJkYXNoYm9hcmQuY29tcG9uZW50LmNzcyJ9 */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50L2Rhc2hib2FyZC9kYXNoYm9hcmQuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQ0Esb0tBQW9LIiwic291cmNlUm9vdCI6IiJ9 */\"]\n  });\n}","map":{"version":3,"names":["Task","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","DashboardComponent_div_21_Template_button_click_5_listener","restoredCtx","ɵɵrestoreView","_r6","task_r4","$implicit","ctx_r5","ɵɵnextContext","ɵɵresetView","call","DashboardComponent_div_21_Template_div_click_7_listener","ctx_r7","deleteTask","DashboardComponent_div_21_Template_button_click_9_listener","ctx_r8","completeTask","ɵɵadvance","ɵɵtextInterpolate","title","DashboardComponent_div_25_Template_button_click_5_listener","_r11","task_r9","ctx_r10","DashboardComponent_div_25_Template_div_click_7_listener","ctx_r12","DashboardComponent_div_25_Template_button_click_9_listener","ctx_r13","incompleteTask","DashboardComponent","constructor","crudService","taskObj","completedTaskArr","incompleteTaskArr","addTaskValue","addTaskDescription","addDueDate","editTaskValue","editTaskDescription","editDueDate","ngOnInit","getCompletedTasks","getIncompleteTasks","addTask","description","dueDate","subscribe","res","err","alert","editTask","etask","_","ɵɵdirectiveInject","i1","CrudService","_2","selectors","decls","vars","consts","template","DashboardComponent_Template","rf","ctx","ɵɵelement","DashboardComponent_Template_input_ngModelChange_12_listener","$event","DashboardComponent_Template_input_ngModelChange_14_listener","DashboardComponent_Template_input_ngModelChange_15_listener","DashboardComponent_Template_button_click_16_listener","ɵɵtemplate","DashboardComponent_div_21_Template","DashboardComponent_div_25_Template","DashboardComponent_Template_input_ngModelChange_35_listener","DashboardComponent_Template_input_ngModelChange_36_listener","DashboardComponent_Template_input_ngModelChange_37_listener","DashboardComponent_Template_button_click_38_listener","ɵɵproperty","ɵɵclassProp","_r1","valid"],"sources":["C:\\Users\\sgaut\\Documents\\tolist\\to-dolist\\src\\app\\component\\dashboard\\dashboard.component.ts","C:\\Users\\sgaut\\Documents\\tolist\\to-dolist\\src\\app\\component\\dashboard\\dashboard.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { Task } from 'src/app/model/task';\nimport { CrudService } from 'src/app/service/crud.service';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent {\n\n  taskObj: Task = new Task();\n  completedTaskArr: Task[] = [];\n  incompleteTaskArr: Task[] = [];\n\n  addTaskValue: string = '';\n  addTaskDescription: string = '';\n  addDueDate: Date | null = null;\n  editTaskValue: string = '';\n  editTaskDescription: string = '';\n  editDueDate: Date | null = null;\n\n  constructor(private crudService: CrudService) { }\n\n  ngOnInit(): void {\n    this.addTaskDescription = '';\n    this.editTaskDescription = '';\n    this.addDueDate = null;\n    this.editDueDate = null;\n    this.editTaskValue = '';\n    this.addTaskValue = '';\n    this.taskObj = new Task();\n    this.getCompletedTasks();\n    this.getIncompleteTasks();\n  }\n\n  addTask() {\n    this.taskObj.title = this.addTaskValue;\n    this.taskObj.description = this.addTaskDescription;\n    this.taskObj.dueDate = this.addDueDate;\n    this.crudService.addTask(this.taskObj).subscribe(res => {\n      this.ngOnInit();\n      this.addTaskValue = '';\n      this.addDueDate = null;\n      this.addTaskDescription = '';\n    }, err => {\n      alert(err);\n    })\n  }\n\n  editTask() {\n    this.taskObj.title = this.editTaskValue;\n    this.taskObj.description = this.editTaskDescription;\n    this.taskObj.dueDate = this.editDueDate;\n    this.crudService.editTask(this.taskObj).subscribe(res => {\n      this.ngOnInit();\n    }, err => {\n      alert(\"Failed to update task\");\n    })\n  }\n\n  deleteTask(etask: Task) {\n    this.crudService.deleteTask(etask).subscribe(res => {\n      this.ngOnInit();\n    }, err => {\n      alert(\"Failed to delete task\")\n    })\n  }\n\n  call(etask: Task) {\n    this.taskObj = etask;\n    this.editTaskValue = etask.title;\n  }\n\n  completeTask(etask: Task) {\n    this.crudService.completeTask(etask).subscribe(res => {\n      this.ngOnInit();\n    }, err => {\n      alert(\"Failed to mark task as completed\");\n    });\n  }\n\n  incompleteTask(etask: Task) {\n    this.crudService.incompleteTask(etask).subscribe(res => {\n      this.ngOnInit();\n    }, err => {\n      alert(\"Failed to mark task as incomplete\");\n    });\n  }\n\n  getCompletedTasks() {\n    this.crudService.getCompletedTasks().subscribe(res => {\n      this.completedTaskArr = res;\n    }, err => {\n      alert(\"Unable to get completed tasks\");\n    });\n  }\n\n  getIncompleteTasks() {\n    this.crudService.getIncompleteTasks().subscribe(res => {\n      this.incompleteTaskArr = res;\n    }, err => {\n      alert(\"Unable to get incomplete tasks\");\n    });\n  }\n}\n","<div class=\"container-fluid bg-light\">\n    <div class=\"container bg-light\">\n      <div class=\"row mt-4\" style=\"height: 500px;\">\n        <div class=\"col\"></div>\n        <div class=\"col-md-6 bg-white shadow\">\n          <div class=\"card bg-warning mt-4\">\n            <h4 class=\"text-white ps-3 pt-2 pb-2\">To Do List</h4>\n          </div>\n          <div class=\"shadow\">\n            <form #taskForm=\"ngForm\">\n              <div class=\"input-group p-4\">\n                <input type=\"text\" class=\"form-control\" placeholder=\"Enter Task\" name=\"task\" [(ngModel)]=\"addTaskValue\"\n                  required minlength=\"3\" #taskInput=\"ngModel\">\n                <input type=\"text\" class=\"form-control\" placeholder=\"Description\" name=\"description\" [(ngModel)]=\"addTaskDescription\">\n                <input type=\"date\" class=\"form-control\" name=\"dueDate\" [(ngModel)]=\"addDueDate\">\n                <button class=\"btn\" [class.btn-outline-success]=\"taskInput.valid\" [class.btn-secondary]=\"!taskInput.valid\"\n                  type=\"button\" (click)=\"addTask()\" [disabled]=\"!taskInput.valid\">Add</button>\n              </div>\n            </form>\n          </div>\n  \n          <h4 class=\"text-primary mt-4\">Tasks:</h4>\n          <div style=\"overflow-y:auto; height: 350px;\">\n            <div class=\"m-3\" *ngFor=\"let task of incompleteTaskArr\">\n              <div class=\"p-2 shadow border\">\n                <div class=\"input-group row ps-3\">\n                  <div class=\"card col-md-10 border-0 m-auto\">{{ task.title }}</div>\n                  <button class=\"btn btn-outline-primary col me-2\" data-bs-toggle=\"modal\" type=\"button\" data-bs-target=\"#exampleModal\"\n                    (click)=\"call(task)\">e</button>\n                  <div class=\"btn btn-outline-danger col\" (click)=\"deleteTask(task)\">X</div>\n                  <button class=\"btn btn-outline-success col\" (click)=\"completeTask(task)\">Complete</button>\n                </div>\n              </div>\n            </div>\n          </div>\n  \n          <h4 class=\"text-success mt-4\">Completed Tasks:</h4>\n          <div style=\"overflow-y:auto; height: 350px;\">\n            <div class=\"m-3\" *ngFor=\"let task of completedTaskArr\">\n              <div class=\"p-2 shadow border\">\n                <div class=\"input-group row ps-3\">\n                  <div class=\"card col-md-10 border-0 m-auto\">{{ task.title }}</div>\n                  <button class=\"btn btn-outline-primary col me-2\" data-bs-toggle=\"modal\" type=\"button\" data-bs-target=\"#exampleModal\"\n                    (click)=\"call(task)\">e</button>\n                  <div class=\"btn btn-outline-danger col\" (click)=\"deleteTask(task)\">X</div>\n                  <button class=\"btn btn-outline-warning col\" (click)=\"incompleteTask(task)\">Not Done</button>\n                </div>\n              </div>\n            </div>\n          </div>\n  \n          <div class=\"modal fade\" id=\"exampleModal\" tabindex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n            <div class=\"modal-dialog\">\n              <div class=\"modal-content\">\n                <div class=\"modal-header\">\n                  <h1 class=\"modal-title fs-5\" id=\"exampleModalLabel\">Edit Task</h1>\n                  <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n                </div>\n                <div class=\"modal-body\">\n                  <div class=\"input-group p-4\">\n                    <input type=\"text\" class=\"form-control\" placeholder=\"Enter Task\" name=\"task\" [(ngModel)]=\"editTaskValue\">\n                    <input type=\"text\" class=\"form-control\" placeholder=\"Description\" name=\"description\" [(ngModel)]=\"editTaskDescription\">\n                    <input type=\"date\" class=\"form-control\" name=\"dueDate\" [(ngModel)]=\"editDueDate\">\n                    <button class=\"btn btn-outline-success\" type=\"button\" data-bs-dismiss=\"modal\" (click)=\"editTask()\">Update</button>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n  \n        </div>\n        <div class=\"col\"></div>\n      </div>\n    </div>\n  </div>\n  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}