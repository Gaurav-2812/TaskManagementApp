{"ast":null,"code":"import { Task } from 'src/app/model/task';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/service/crud.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction DashboardComponent_div_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 17);\n    i0.ɵɵtext(1, \" Task is required. \");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class DashboardComponent {\n  constructor(crudService) {\n    this.crudService = crudService;\n    this.taskObj = new Task();\n    this.taskArr = [];\n    this.addTaskValue = '';\n    this.editTaskValue = '';\n  }\n  ngOnInit() {\n    this.editTaskValue = '';\n    this.addTaskValue = '';\n    this.taskObj = new Task();\n    this.taskArr = [];\n    this.getAllTask();\n  }\n  getAllTask() {\n    this.crudService.getAllTask().subscribe(res => {\n      this.taskArr = res;\n    }, err => {\n      alert(\"Unable to get list of tasks\");\n    });\n  }\n  addTask() {\n    this.taskObj.task_name = this.addTaskValue;\n    this.crudService.addTask(this.taskObj).subscribe(res => {\n      this.ngOnInit();\n      this.addTaskValue = '';\n    }, err => {\n      alert(err);\n    });\n  }\n  editTask() {\n    this.taskObj.task_name = this.editTaskValue;\n    this.crudService.editTask(this.taskObj).subscribe(res => {\n      this.ngOnInit();\n    }, err => {\n      alert(\"Failed to update task\");\n    });\n  }\n  deleteTask(etask) {\n    this.crudService.deleteTask(etask).subscribe(res => {\n      this.ngOnInit();\n    }, err => {\n      alert(\"Failed to delete task\");\n    });\n  }\n  call(etask) {\n    this.taskObj = etask;\n    this.editTaskValue = etask.task_name;\n  }\n  static #_ = this.ɵfac = function DashboardComponent_Factory(t) {\n    return new (t || DashboardComponent)(i0.ɵɵdirectiveInject(i1.CrudService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: DashboardComponent,\n    selectors: [[\"app-dashboard\"]],\n    decls: 21,\n    vars: 2,\n    consts: [[1, \"container-fluid\", \"bg-light\"], [1, \"container\", \"bg-light\"], [1, \"row\", \"mt-4\", 2, \"height\", \"500px\"], [1, \"col\"], [1, \"col-md-6\", \"bg-white\", \"shadow\"], [1, \"card\", \"bg-warning\", \"mt-4\"], [1, \"text-white\", \"ps-3\", \"pt-2\", \"pb-2\"], [1, \"shadow\"], [3, \"ngSubmit\"], [\"addTaskForm\", \"ngForm\"], [1, \"input-group\", \"p-4\"], [\"type\", \"text\", \"placeholder\", \"Enter Task\", \"name\", \"task\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"taskInput\", \"ngModel\"], [\"class\", \"text-danger\", 4, \"ngIf\"], [\"type\", \"submit\", 1, \"btn\", \"btn-outline-success\"], [1, \"text-primary\", \"mt-4\"], [2, \"overflow-y\", \"auto\", \"height\", \"350px\"], [1, \"text-danger\"]],\n    template: function DashboardComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2);\n        i0.ɵɵelement(3, \"div\", 3);\n        i0.ɵɵelementStart(4, \"div\", 4)(5, \"div\", 5)(6, \"h4\", 6);\n        i0.ɵɵtext(7, \"To Do List\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(8, \"div\", 7)(9, \"form\", 8, 9);\n        i0.ɵɵlistener(\"ngSubmit\", function DashboardComponent_Template_form_ngSubmit_9_listener() {\n          return ctx.addTask();\n        });\n        i0.ɵɵelementStart(11, \"div\", 10)(12, \"input\", 11, 12);\n        i0.ɵɵlistener(\"ngModelChange\", function DashboardComponent_Template_input_ngModelChange_12_listener($event) {\n          return ctx.addTaskValue = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(14, DashboardComponent_div_14_Template, 2, 0, \"div\", 13);\n        i0.ɵɵelementStart(15, \"button\", 14);\n        i0.ɵɵtext(16, \"Add\");\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(17, \"h4\", 15);\n        i0.ɵɵtext(18, \"Tasks : \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(19, \"div\", 16);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(20, \"div\", 3);\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        const _r1 = i0.ɵɵreference(13);\n        i0.ɵɵadvance(12);\n        i0.ɵɵproperty(\"ngModel\", ctx.addTaskValue);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", _r1.invalid && (_r1.dirty || _r1.touched));\n      }\n    },\n    dependencies: [i2.NgIf, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.NgModel, i3.NgForm],\n    styles: [\"/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJkYXNoYm9hcmQuY29tcG9uZW50LmNzcyJ9 */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50L2Rhc2hib2FyZC9kYXNoYm9hcmQuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQ0Esb0tBQW9LIiwic291cmNlUm9vdCI6IiJ9 */\"]\n  });\n}","map":{"version":3,"names":["Task","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","DashboardComponent","constructor","crudService","taskObj","taskArr","addTaskValue","editTaskValue","ngOnInit","getAllTask","subscribe","res","err","alert","addTask","task_name","editTask","deleteTask","etask","call","_","ɵɵdirectiveInject","i1","CrudService","_2","selectors","decls","vars","consts","template","DashboardComponent_Template","rf","ctx","ɵɵelement","ɵɵlistener","DashboardComponent_Template_form_ngSubmit_9_listener","DashboardComponent_Template_input_ngModelChange_12_listener","$event","ɵɵtemplate","DashboardComponent_div_14_Template","ɵɵadvance","ɵɵproperty","_r1","invalid","dirty","touched"],"sources":["C:\\Users\\sgaut\\Documents\\tolist\\to-dolist\\src\\app\\component\\dashboard\\dashboard.component.ts","C:\\Users\\sgaut\\Documents\\tolist\\to-dolist\\src\\app\\component\\dashboard\\dashboard.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { Task } from 'src/app/model/task';\nimport { CrudService } from 'src/app/service/crud.service';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent {\n\n  taskObj : Task = new Task();\n  taskArr : Task[] = [];\n\n  addTaskValue : string = ''; \n  editTaskValue : string = '';\n\n  constructor(private crudService : CrudService) {}\n\n  ngOnInit() : void{\n    this.editTaskValue = '';\n    this.addTaskValue = '';\n    this.taskObj = new Task();\n    this.taskArr = [];\n    this.getAllTask();\n  }\n  getAllTask() {\n    this.crudService.getAllTask().subscribe(res => {\n      this.taskArr = res;\n    },err =>{\n      alert(\"Unable to get list of tasks\");\n    })\n  }\n\n  addTask(){\n    this.taskObj.task_name = this.addTaskValue;\n    this.crudService.addTask(this.taskObj).subscribe(res =>{\n      this.ngOnInit();\n      this.addTaskValue = '';\n    }, err => {\n      alert(err);\n    })\n  }\n  editTask(){\n    this.taskObj.task_name = this.editTaskValue;\n    this.crudService.editTask(this.taskObj).subscribe(res => {\n      this.ngOnInit();\n    },err =>{\n      alert(\"Failed to update task\");\n    })\n  }\n  deleteTask(etask : Task){\n    this.crudService.deleteTask(etask).subscribe(res =>{\n      this.ngOnInit();\n    },err=>{\n      alert(\"Failed to delete task\")\n    })\n  }\n  call(etask : Task) {\n    this.taskObj = etask;\n    this.editTaskValue = etask.task_name;\n  }\n}\n","<div class=\"container-fluid bg-light\">\n    <div class=\"container bg-light\">\n      <div class=\"row mt-4\" style=\"height: 500px;\">\n        <div class=\"col\"></div>\n        <div class=\"col-md-6 bg-white shadow\">\n          <div class=\"card bg-warning mt-4\">\n            <h4 class=\"text-white ps-3 pt-2 pb-2\">To Do List</h4>\n          </div>\n          <div class=\"shadow\">\n            <form (ngSubmit)=\"addTask()\" #addTaskForm=\"ngForm\">\n              <div class=\"input-group p-4\">\n                <input\n                  type=\"text\"\n                  class=\"form-control\"\n                  placeholder=\"Enter Task\"\n                  name=\"task\"\n                  [(ngModel)]=\"addTaskValue\"\n                  required  \n                  #taskInput=\"ngModel\" \n                >\n                <div *ngIf=\"taskInput.invalid && (taskInput.dirty || taskInput.touched)\" class=\"text-danger\">\n                  Task is required. <!-- Display validation error message -->\n                </div>\n                <button class=\"btn btn-outline-success\" type=\"submit\">Add</button> <!-- Use (ngSubmit) for form submission -->\n              </div>\n            </form>\n          </div>\n          <h4 class=\"text-primary mt-4\">Tasks : </h4>\n          <div style=\"overflow-y:auto; height: 350px;\">\n            <!-- Task list goes here -->\n          </div>\n          <!-- Modal and editing logic -->\n        </div>\n        <div class=\"col\"></div>\n      </div>\n    </div>\n  </div>\n  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}