{"ast":null,"code":"import { Task } from 'src/app/model/task';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/service/crud.service\";\nimport * as i2 from \"@angular/forms\";\nexport class DashboardComponent {\n  constructor(crudService) {\n    this.crudService = crudService;\n    this.taskObj = new Task();\n    this.taskArr = [];\n    this.addTaskValue = '';\n    this.editTaskValue = '';\n  }\n  ngOnInit() {\n    this.editTaskValue = '';\n    this.addTaskValue = '';\n    this.taskObj = new Task();\n    this.taskArr = [];\n    this.getAllTask();\n  }\n  getAllTask() {\n    this.crudService.getAllTask().subscribe(res => {\n      this.taskArr = res;\n    }, err => {\n      alert(\"Unable to get list of tasks\");\n    });\n  }\n  addTask() {\n    this.taskObj.task_name = this.addTaskValue;\n    this.crudService.addTask(this.taskObj).subscribe(res => {\n      this.ngOnInit();\n      this.addTaskValue = '';\n    }, err => {\n      alert(err);\n    });\n  }\n  editTask() {\n    this.taskObj.task_name = this.editTaskValue;\n    this.crudService.editTask(this.taskObj).subscribe(res => {\n      this.ngOnInit();\n    }, err => {\n      alert(\"Failed to update task\");\n    });\n  }\n  deleteTask(etask) {\n    this.crudService.deleteTask(etask).subscribe(res => {\n      this.ngOnInit();\n    }, err => {\n      alert(\"Failed to delete task\");\n    });\n  }\n  call(etask) {\n    this.taskObj = etask;\n    this.editTaskValue = etask.task_name;\n  }\n  static #_ = this.ɵfac = function DashboardComponent_Factory(t) {\n    return new (t || DashboardComponent)(i0.ɵɵdirectiveInject(i1.CrudService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: DashboardComponent,\n    selectors: [[\"app-dashboard\"]],\n    decls: 6,\n    vars: 2,\n    consts: [[3, \"ngSubmit\"], [\"taskForm\", \"ngForm\"], [\"type\", \"text\", \"placeholder\", \"Enter task name\", \"name\", \"taskName\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\", 3, \"disabled\"]],\n    template: function DashboardComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\")(1, \"form\", 0, 1);\n        i0.ɵɵlistener(\"ngSubmit\", function DashboardComponent_Template_form_ngSubmit_1_listener() {\n          return ctx.addTask();\n        });\n        i0.ɵɵelementStart(3, \"input\", 2);\n        i0.ɵɵlistener(\"ngModelChange\", function DashboardComponent_Template_input_ngModelChange_3_listener($event) {\n          return ctx.addTaskValue = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"button\", 3);\n        i0.ɵɵtext(5, \"Add Task\");\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        const _r0 = i0.ɵɵreference(2);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngModel\", ctx.addTaskValue);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"disabled\", _r0.invalid);\n      }\n    },\n    dependencies: [i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.RequiredValidator, i2.NgModel, i2.NgForm],\n    styles: [\"/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJkYXNoYm9hcmQuY29tcG9uZW50LmNzcyJ9 */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50L2Rhc2hib2FyZC9kYXNoYm9hcmQuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQ0Esb0tBQW9LIiwic291cmNlUm9vdCI6IiJ9 */\"]\n  });\n}","map":{"version":3,"names":["Task","DashboardComponent","constructor","crudService","taskObj","taskArr","addTaskValue","editTaskValue","ngOnInit","getAllTask","subscribe","res","err","alert","addTask","task_name","editTask","deleteTask","etask","call","_","i0","ɵɵdirectiveInject","i1","CrudService","_2","selectors","decls","vars","consts","template","DashboardComponent_Template","rf","ctx","ɵɵelementStart","ɵɵlistener","DashboardComponent_Template_form_ngSubmit_1_listener","DashboardComponent_Template_input_ngModelChange_3_listener","$event","ɵɵelementEnd","ɵɵtext","ɵɵadvance","ɵɵproperty","_r0","invalid"],"sources":["C:\\Users\\sgaut\\Documents\\tolist\\to-dolist\\src\\app\\component\\dashboard\\dashboard.component.ts","C:\\Users\\sgaut\\Documents\\tolist\\to-dolist\\src\\app\\component\\dashboard\\dashboard.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { Task } from 'src/app/model/task';\nimport { CrudService } from 'src/app/service/crud.service';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent {\n\n  taskObj : Task = new Task();\n  taskArr : Task[] = [];\n\n  addTaskValue : string = ''; \n  editTaskValue : string = '';\n\n  constructor(private crudService : CrudService) {}\n\n  ngOnInit() : void{\n    this.editTaskValue = '';\n    this.addTaskValue = '';\n    this.taskObj = new Task();\n    this.taskArr = [];\n    this.getAllTask();\n  }\n  getAllTask() {\n    this.crudService.getAllTask().subscribe(res => {\n      this.taskArr = res;\n    },err =>{\n      alert(\"Unable to get list of tasks\");\n    })\n  }\n\n  addTask(){\n    this.taskObj.task_name = this.addTaskValue;\n    this.crudService.addTask(this.taskObj).subscribe(res =>{\n      this.ngOnInit();\n      this.addTaskValue = '';\n    }, err => {\n      alert(err);\n    })\n  }\n  editTask(){\n    this.taskObj.task_name = this.editTaskValue;\n    this.crudService.editTask(this.taskObj).subscribe(res => {\n      this.ngOnInit();\n    },err =>{\n      alert(\"Failed to update task\");\n    })\n  }\n  deleteTask(etask : Task){\n    this.crudService.deleteTask(etask).subscribe(res =>{\n      this.ngOnInit();\n    },err=>{\n      alert(\"Failed to delete task\")\n    })\n  }\n  call(etask : Task) {\n    this.taskObj = etask;\n    this.editTaskValue = etask.task_name;\n  }\n}\n","<div>\n    <form #taskForm=\"ngForm\" (ngSubmit)=\"addTask()\">\n      <input type=\"text\" placeholder=\"Enter task name\" [(ngModel)]=\"addTaskValue\" name=\"taskName\" required>\n      <button type=\"submit\" [disabled]=\"taskForm.invalid\">Add Task</button>\n    </form>\n  </div>\n  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}